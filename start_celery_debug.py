#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Celery —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(str(Path(__file__).parent))

def start_celery_worker():
    """–ó–∞–ø—É—Å–∫ Celery worker —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π"""
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ Celery Worker...")
        print("=" * 50)
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Celery app
        from core.celery_app import celery_app
        
        print(f"‚úÖ Celery app –∑–∞–≥—Ä—É–∂–µ–Ω: {celery_app.main}")
        print(f"‚úÖ Broker URL: {celery_app.conf.broker_url}")
        print(f"‚úÖ Result backend: {celery_app.conf.result_backend}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º worker
        print("\nüîÑ –ó–∞–ø—É—Å–∫ worker...")
        celery_app.worker_main([
            'worker',
            '--loglevel=info',
            '--concurrency=1',  # –£–º–µ–Ω—å—à–∞–µ–º concurrency –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
            '--pool=solo',       # –ò—Å–ø–æ–ª—å–∑—É–µ–º solo pool –¥–ª—è Windows
            '--without-gossip',  # –û—Ç–∫–ª—é—á–∞–µ–º gossip –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã
            '--without-mingle',  # –û—Ç–∫–ª—é—á–∞–µ–º mingle –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã
            '--without-heartbeat' # –û—Ç–∫–ª—é—á–∞–µ–º heartbeat –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã
        ])
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Celery worker: {e}")
        import traceback
        traceback.print_exc()

def start_celery_beat():
    """–ó–∞–ø—É—Å–∫ Celery beat —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π"""
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ Celery Beat...")
        print("=" * 50)
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Celery app
        from core.celery_app import celery_app
        
        print(f"‚úÖ Celery app –∑–∞–≥—Ä—É–∂–µ–Ω: {celery_app.main}")
        print(f"‚úÖ Beat schedule: {celery_app.conf.beat_schedule}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º beat
        print("\nüîÑ –ó–∞–ø—É—Å–∫ beat...")
        celery_app.start([
            'beat',
            '--loglevel=info'
        ])
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Celery beat: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    import sys
    
    if len(sys.argv) > 1:
        if sys.argv[1] == "worker":
            start_celery_worker()
        elif sys.argv[1] == "beat":
            start_celery_beat()
        else:
            print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python start_celery_debug.py [worker|beat]")
    else:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python start_celery_debug.py [worker|beat]")
