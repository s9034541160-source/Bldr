#!/usr/bin/env python3
"""
–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è Neo4j —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
"""

import subprocess
import os
import time
from pathlib import Path

def find_neo4j_path():
    """–ù–∞–π—Ç–∏ –ø—É—Ç—å –∫ Neo4j"""
    # –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Neo4j Desktop
    possible_paths = [
        r"C:\Users\{}\AppData\Local\Neo4j\Relate\Data\projects\project-*\dbmss\dbms-*\bin".format(os.getenv('USERNAME')),
        r"C:\Program Files\Neo4j CE 4.*\bin",
        r"C:\Program Files\Neo4j CE 5.*\bin", 
        r"C:\Neo4j\bin",
        r"C:\neo4j-*\bin"
    ]
    
    for path_pattern in possible_paths:
        if '*' in path_pattern:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º glob –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—É—Ç–µ–π —Å wildcards
            import glob
            matches = glob.glob(path_pattern)
            for match in matches:
                if os.path.exists(os.path.join(match, 'neo4j-admin.bat')):
                    return match
        else:
            if os.path.exists(os.path.join(path_pattern, 'neo4j-admin.bat')):
                return path_pattern
    
    return None

def reset_neo4j_password():
    """–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è Neo4j"""
    print("üîê –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è Neo4j")
    print("=" * 40)
    
    # –ù–∞–π—Ç–∏ Neo4j
    neo4j_path = find_neo4j_path()
    if not neo4j_path:
        print("‚ùå Neo4j –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ Neo4j Desktop:")
        print("   1. –û—Ç–∫—Ä–æ–π—Ç–µ Neo4j Desktop")
        print("   2. –í—ã–±–µ—Ä–∏—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        print("   3. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç—Ä–∏ —Ç–æ—á–∫–∏ -> Settings")
        print("   4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞—Ä–æ–ª—å: neopassword")
        return False
    
    print(f"‚úÖ Neo4j –Ω–∞–π–¥–µ–Ω: {neo4j_path}")
    
    # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Neo4j (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω)
    print("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Neo4j...")
    try:
        subprocess.run([os.path.join(neo4j_path, 'neo4j.bat'), 'stop'], 
                      capture_output=True, text=True, timeout=30)
    except:
        pass
    
    time.sleep(5)
    
    # –°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å
    print("üîÑ –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–∞—Ä–æ–ª—å –Ω–∞ 'neopassword'...")
    try:
        result = subprocess.run([
            os.path.join(neo4j_path, 'neo4j-admin.bat'),
            'dbms', 'set-initial-password', 'neopassword'
        ], capture_output=True, text=True, timeout=60)
        
        if result.returncode == 0:
            print("‚úÖ –ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print(f"‚ö†Ô∏è  –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.stderr}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è: {e}")
    
    # –ó–∞–ø—É—Å—Ç–∏—Ç—å Neo4j
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Neo4j...")
    try:
        subprocess.run([os.path.join(neo4j_path, 'neo4j.bat'), 'start'], 
                      capture_output=True, text=True, timeout=30)
        print("‚úÖ Neo4j –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω")
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
    
    return True

def main():
    if not reset_neo4j_password():
        print("\nüîß –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã:")
        print("1. –ß–µ—Ä–µ–∑ Neo4j Desktop:")
        print("   - –û—Ç–∫—Ä–æ–π—Ç–µ Neo4j Desktop")
        print("   - –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç/–±–∞–∑—É")
        print("   - Settings -> Password: neopassword")
        print()
        print("2. –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å Neo4j:")
        print("   - –î–æ–±–∞–≤—å—Ç–µ SKIP_NEO4J=true –≤ .env —Ñ–∞–π–ª")
        print("   - –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –≥—Ä–∞—Ñ–æ–≤–æ–π –±–∞–∑—ã")

if __name__ == "__main__":
    main()