#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ RAG –æ–±—É—á–µ–Ω–∏—è –Ω–∞ –ø–∞–ø–∫–µ I:/docs/downloaded —Å 1168 —Ñ–∞–π–ª–∞–º–∏ –ù–¢–î
"""

import requests
import json
import time
from datetime import datetime
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
API_BASE = "http://localhost:8000"
TIMEOUT_TRAIN = 14400  # 4 —á–∞—Å–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è 1168 —Ñ–∞–π–ª–æ–≤
API_TOKEN = os.getenv("API_TOKEN")

def get_auth_headers():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    if API_TOKEN:
        return {"Authorization": f"Bearer {API_TOKEN}"}
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
    try:
        response = requests.post(f"{API_BASE}/token", timeout=30)
        if response.status_code == 200:
            data = response.json()
            token = data["access_token"]
            return {"Authorization": f"Bearer {token}"}
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}")
    
    return {}

def start_training():
    """–ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è RAG –Ω–∞ –ø–∞–ø–∫–µ downloaded"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ RAG –æ–±—É—á–µ–Ω–∏—è –Ω–∞ 1168 —Ñ–∞–π–ª–∞—Ö –ù–¢–î")
    print("=" * 80)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    try:
        response = requests.get(f"{API_BASE}/health", timeout=30)
        if response.status_code != 200:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
        return False
    
    print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    auth_headers = get_auth_headers()
    if not auth_headers:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        return False
    
    print("‚úÖ –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω")
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è
    train_data = {
        "custom_dir": "I:/docs/downloaded"
    }
    
    print(f"üìÇ –ü–∞–ø–∫–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è: {train_data['custom_dir']}")
    print(f"üìä –û–∂–∏–¥–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: 1168")
    print(f"‚è±Ô∏è  –û–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è: 2-4 —á–∞—Å–∞")
    print()
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    confirm = input("ü§î –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ? –≠—Ç–æ –∑–∞–π–º—ë—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤! (y/N): ").lower().strip()
    if confirm not in ['y', 'yes']:
        print("‚è≠Ô∏è  –û–±—É—á–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return False
    
    # –ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è
    print("üéì –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ...")
    print("=" * 80)
    
    start_time = datetime.now()
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ
        response = requests.post(
            f"{API_BASE}/train",
            json=train_data,
            headers=auth_headers,
            timeout=TIMEOUT_TRAIN,
            stream=False  # –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º stream –¥–ª—è —ç—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
        )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç!")
            print(f"üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {result}")
            
            # –û–±—É—á–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ —Ñ–æ–Ω–µ, –º–æ–Ω–∏—Ç–æ—Ä–∏–º —á–µ—Ä–µ–∑ –ª–æ–≥–∏ –∏–ª–∏ –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–±
            print("\nüìä –û–±—É—á–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ")
            print("üîÑ –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:")
            print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞")
            print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
            print("   - –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ —Å–∏—Å—Ç–µ–º—ã")
            
            # –ñ–¥—ë–º –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            print("\n‚è≥ –ñ–¥—ë–º 30 —Å–µ–∫—É–Ω–¥ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤–∏—á–Ω—ã–π —Å—Ç–∞—Ç—É—Å...")
            time.sleep(30)
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
            print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –æ–±—É—á–µ–Ω–∏—è...")
            test_query_after_training(auth_headers)
            
            end_time = datetime.now()
            duration = end_time - start_time
            
            print("\n" + "=" * 80)
            print(f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"‚è±Ô∏è  –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {duration}")
            print(f"üïê –ù–∞—á–∞–ª–æ –æ–±—É—á–µ–Ω–∏—è: {start_time.strftime('%H:%M:%S')}")
            print("üìù –û–±—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ")
            
            return True
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ–±—É—á–µ–Ω–∏—è: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.Timeout:
        print("‚è∞ –¢–∞–π–º-–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ (—ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –¥–æ–ª–≥–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è)")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –æ–±—É—á–µ–Ω–∏—è: {e}")
        return False

def test_query_after_training(auth_headers):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –æ–±—É—á–µ–Ω–∏—è"""
    try:
        query_data = {
            "query": "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–æ—Ä–º—ã –∏ –ø—Ä–∞–≤–∏–ª–∞",
            "k": 5
        }
        
        response = requests.post(
            f"{API_BASE}/query",
            json=query_data,
            headers=auth_headers,
            timeout=30
        )
        
        if response.status_code == 200:
            results = response.json()
            if 'results' in results and results['results']:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(results['results'])}")
                print("üìã –ü–µ—Ä–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
                for i, result in enumerate(results['results'][:3], 1):
                    chunk = result.get('chunk', '')[:150]
                    score = result.get('score', 0)
                    print(f"  {i}. [{score:.3f}] {chunk}...")
            else:
                print("‚ÑπÔ∏è  –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç (–æ–±—É—á–µ–Ω–∏–µ –µ—â—ë –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ)")
        else:
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üèóÔ∏è  Bldr RAG Training –¥–ª—è 1168 —Ñ–∞–π–ª–æ–≤ –ù–¢–î")
    print("üéØ –¶–µ–ª—å: –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ RAG-—Å–∏—Å—Ç–µ–º—ã –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–π –±–∞–∑–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    print()
    
    success = start_training()
    
    if success:
        print("\nüéâ –û–±—É—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!")
        print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("   - –ù–µ –∑–∞–∫—Ä—ã–≤–∞–π—Ç–µ –±–µ–∫–µ–Ω–¥-—Å–µ—Ä–≤–µ—Ä")
        print("   - –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞ –∏ –ø–∞–º—è—Ç–∏")
        print("   - –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ —Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–æ–∏—Å–∫")
        print("   - –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("   - –†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –±–µ–∫–µ–Ω–¥-—Å–µ—Ä–≤–µ—Ä")
        print("   - –î–æ—Å—Ç—É–ø–Ω–∞ –ª–∏ –ø–∞–ø–∫–∞ I:/docs/downloaded")
        print("   - –ö–æ—Ä—Ä–µ–∫—Ç–µ–Ω –ª–∏ —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")

if __name__ == "__main__":
    main()