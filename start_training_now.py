#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ RAG –æ–±—É—á–µ–Ω–∏—è –Ω–∞ 1168 —Ñ–∞–π–ª–∞—Ö —Å –Ω–æ–≤—ã–º –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
"""

import requests
import json
from datetime import datetime
import os
from dotenv import load_dotenv

load_dotenv()

API_BASE = "http://localhost:8000"
API_TOKEN = os.getenv("API_TOKEN")

def start_training_now():
    """–ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ"""
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ RAG –æ–±—É—á–µ–Ω–∏—è –Ω–∞ 1168 —Ñ–∞–π–ª–∞—Ö –ù–¢–î")
    print("=" * 60)
    
    if not API_TOKEN:
        print("‚ùå –ù–µ—Ç API —Ç–æ–∫–µ–Ω–∞")
        return False
    
    headers = {"Authorization": f"Bearer {API_TOKEN}"}
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
    try:
        response = requests.get(f"{API_BASE}/health", timeout=10)
        if response.status_code != 200:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
        print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è
    train_data = {
        "custom_dir": "I:/docs/downloaded"
    }
    
    print(f"üìÇ –ü–∞–ø–∫–∞: {train_data['custom_dir']}")
    print(f"üìä –§–∞–π–ª–æ–≤: 1168 –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ù–¢–î")
    print(f"üïê –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime('%H:%M:%S')}")
    
    try:
        print("\nüì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ...")
        
        response = requests.post(
            f"{API_BASE}/train",
            json=train_data,
            headers=headers,
            timeout=30
        )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –û–±—É—á–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!")
            print(f"üìã –û—Ç–≤–µ—Ç: {result}")
            print("\nüéØ RAG –æ–±—É—á–µ–Ω–∏–µ –Ω–∞ 1168 —Ñ–∞–π–ª–∞—Ö –∞–∫—Ç–∏–≤–Ω–æ!")
            print("üîÑ –ü—Ä–æ—Ü–µ—Å—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ")
            print("‚è±Ô∏è  –û–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è: 2-4 —á–∞—Å–∞")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"üìÑ –î–µ—Ç–∞–ª–∏: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
        return False

if __name__ == "__main__":
    success = start_training_now()
    if success:
        print("\nüéâ –û–±—É—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!")
        print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ python quick_search_test.py –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ")