#!/usr/bin/env python3
"""
Fix Neo4j Training Issue
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–±—É—á–µ–Ω–∏–µ–º RAG
"""

import os
import json
import shutil
from pathlib import Path

def diagnose_neo4j_issue():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å Neo4j"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ NEO4J")
    print("=" * 50)
    
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Neo4j...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Neo4j
    try:
        import psutil
        neo4j_processes = []
        for proc in psutil.process_iter(['pid', 'name', 'cmdline']):
            if 'neo4j' in proc.info['name'].lower() or any('neo4j' in str(cmd).lower() for cmd in proc.info['cmdline'] or []):
                neo4j_processes.append(proc.info)
        
        if neo4j_processes:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(neo4j_processes)} –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Neo4j")
            for proc in neo4j_processes:
                print(f"   PID: {proc['pid']}, Name: {proc['name']}")
        else:
            print("‚ùå –ü—Ä–æ—Ü–µ—Å—Å—ã Neo4j –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    except ImportError:
        print("‚ö†Ô∏è psutil –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–æ—Ü–µ—Å—Å–æ–≤")
    
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫—ç—à–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–∞ –æ–±—É—á–µ–Ω–∏—è
    cache_dirs = [
        "I:/docs/downloaded/cache",
        "./cache",
        "./data/cache"
    ]
    
    for cache_dir in cache_dirs:
        if os.path.exists(cache_dir):
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∫—ç—à: {cache_dir}")
            files = list(Path(cache_dir).glob("*.json"))
            print(f"   –§–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π: {len(files)}")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–æ–≤
            total_size = sum(f.stat().st_size for f in files)
            print(f"   –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {total_size / 1024 / 1024:.2f} MB")
        else:
            print(f"‚ùå –ö—ç—à –Ω–µ –Ω–∞–π–¥–µ–Ω: {cache_dir}")
    
    print("\n3. –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–∫–∏...")
    print("–û—à–∏–±–∫–∞ 'object cannot be re-sized' –æ–±—ã—á–Ω–æ –æ–∑–Ω–∞—á–∞–µ—Ç:")
    print("   ‚Ä¢ –ö–æ–Ω—Ñ–ª–∏–∫—Ç –¥–∞–Ω–Ω—ã—Ö –≤ Neo4j")
    print("   ‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–∞–º—è—Ç—å—é")
    print("   ‚Ä¢ –ù–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
    print("   ‚Ä¢ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —É–∑–ª–æ–≤/—Å–≤—è–∑–µ–π")

def suggest_solutions():
    """–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏–π"""
    print("\nüõ†Ô∏è –í–ê–†–ò–ê–ù–¢–´ –†–ï–®–ï–ù–ò–Ø")
    print("=" * 30)
    
    solutions = [
        {
            "level": "–õ–ï–ì–ö–ò–ô",
            "title": "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Neo4j",
            "description": "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Neo4j –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–∞–º—è—Ç–∏ –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π",
            "steps": [
                "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ–±—É—á–µ–Ω–∏—è (Ctrl+C)",
                "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Neo4j —Å–µ—Ä–≤–∏—Å",
                "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ —Å —Ç–æ–≥–æ –∂–µ –º–µ—Å—Ç–∞"
            ],
            "risk": "–ù–∏–∑–∫–∏–π",
            "time": "2-3 –º–∏–Ω—É—Ç—ã"
        },
        {
            "level": "–°–†–ï–î–ù–ò–ô", 
            "title": "–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ",
            "description": "–û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã –∫—ç—à–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
            "steps": [
                "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ",
                "–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª—ã –∫—ç—à–∞ –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞",
                "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ —Å —Ñ–ª–∞–≥–æ–º --resume"
            ],
            "risk": "–°—Ä–µ–¥–Ω–∏–π",
            "time": "5-10 –º–∏–Ω—É—Ç"
        },
        {
            "level": "–†–ê–î–ò–ö–ê–õ–¨–ù–´–ô",
            "title": "–ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –∏ –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ",
            "description": "–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ",
            "steps": [
                "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã",
                "–û—á–∏—Å—Ç–∏—Ç—å Neo4j –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö",
                "–û—á–∏—Å—Ç–∏—Ç—å –≤–µ–∫—Ç–æ—Ä–Ω—É—é –±–∞–∑—É",
                "–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ"
            ],
            "risk": "–í—ã—Å–æ–∫–∏–π - –ø–æ—Ç–µ—Ä—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö",
            "time": "30+ –º–∏–Ω—É—Ç"
        }
    ]
    
    for i, solution in enumerate(solutions, 1):
        print(f"\n{i}. {solution['level']}: {solution['title']}")
        print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {solution['description']}")
        print(f"   –†–∏—Å–∫: {solution['risk']}")
        print(f"   –í—Ä–µ–º—è: {solution['time']}")
        print("   –®–∞–≥–∏:")
        for step in solution['steps']:
            print(f"     ‚Ä¢ {step}")

def create_recovery_script():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"""
    print("\nüìù –°–û–ó–î–ê–ù–ò–ï –°–ö–†–ò–ü–¢–ê –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø")
    print("=" * 40)
    
    recovery_script = '''#!/usr/bin/env python3
"""
RAG Training Recovery Script
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è RAG –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ Neo4j
"""

import os
import sys
import json
import shutil
from pathlib import Path

def stop_training():
    """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –æ–±—É—á–µ–Ω–∏—è"""
    print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –æ–±—É—á–µ–Ω–∏—è...")
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è graceful shutdown
    
def restart_neo4j():
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Neo4j"""
    print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Neo4j...")
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Neo4j
    os.system("net stop neo4j")  # Windows
    os.system("net start neo4j")  # Windows
    # –î–ª—è Linux: systemctl restart neo4j
    
def clean_problematic_cache():
    """–û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ –∫—ç—à–∞"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ –∫—ç—à–∞...")
    
    problematic_file = "gesn_28_chast_28._zheleznye_dorogi.pdf"
    cache_patterns = [
        f"sequences_{problematic_file.replace('.pdf', '.json')}",
        f"embeddings_{problematic_file.replace('.pdf', '.json')}",
        f"chunks_{problematic_file.replace('.pdf', '.json')}"
    ]
    
    cache_dirs = [
        "I:/docs/downloaded/cache",
        "./cache", 
        "./data/cache"
    ]
    
    for cache_dir in cache_dirs:
        if os.path.exists(cache_dir):
            for pattern in cache_patterns:
                cache_file = Path(cache_dir) / pattern
                if cache_file.exists():
                    print(f"   –£–¥–∞–ª—è–µ–º: {cache_file}")
                    cache_file.unlink()

def resume_training():
    """–í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–∏—è"""
    print("‚ñ∂Ô∏è –í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–∏—è...")
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è
    resume_command = """
    python enterprise_rag_trainer_full.py --resume --skip-processed --neo4j-retry 3 --batch-size 1
    """
    
    print("–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:")
    print(resume_command)

def full_reset():
    """–ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö"""
    print("üí• –ü–û–õ–ù–´–ô –°–ë–†–û–° –ë–ê–ó–î–î–ê–ù–ù–´–•")
    print("‚ö†Ô∏è –≠–¢–û –£–î–ê–õ–ò–¢ –í–°–ï –û–ë–£–ß–ï–ù–ù–´–ï –î–ê–ù–ù–´–ï!")
    
    confirm = input("–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í–≤–µ–¥–∏—Ç–µ 'YES' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ")
    if confirm != "YES":
        print("–û—Ç–º–µ–Ω–µ–Ω–æ")
        return
        
    # –û—á–∏—Å—Ç–∫–∞ Neo4j
    print("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ Neo4j...")
    # –ó–¥–µ—Å—å –∫–æ–¥ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ Neo4j
    
    # –û—á–∏—Å—Ç–∫–∞ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã
    print("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã...")
    # –ó–¥–µ—Å—å –∫–æ–¥ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ Chroma/FAISS
    
    # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    print("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞...")
    cache_dirs = ["./cache", "./data/cache", "I:/docs/downloaded/cache"]
    for cache_dir in cache_dirs:
        if os.path.exists(cache_dir):
            shutil.rmtree(cache_dir)
            os.makedirs(cache_dir)
    
    print("‚úÖ –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    print("üöë RAG TRAINING RECOVERY TOOL")
    print("=" * 40)
    
    print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
    print("1. –ú—è–≥–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ (–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ Neo4j)")
    print("2. –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ –∫—ç—à–∞")
    print("3. –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö")
    print("4. –í—ã—Ö–æ–¥")
    
    choice = input("–í–∞—à –≤—ã–±–æ—Ä (1-4): ")
    
    if choice == "1":
        stop_training()
        restart_neo4j()
        resume_training()
    elif choice == "2":
        stop_training()
        clean_problematic_cache()
        restart_neo4j()
        resume_training()
    elif choice == "3":
        full_reset()
    else:
        print("–í—ã—Ö–æ–¥")
'''
    
    with open("recovery_script.py", "w", encoding="utf-8") as f:
        f.write(recovery_script)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: recovery_script.py")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    diagnose_neo4j_issue()
    suggest_solutions()
    create_recovery_script()
    
    print("\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø")
    print("=" * 20)
    print("1. –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –õ–ï–ì–ö–ò–ô –≤–∞—Ä–∏–∞–Ω—Ç (–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ Neo4j)")
    print("2. –ï—Å–ª–∏ –Ω–µ –ø–æ–º–æ–∂–µ—Ç - –°–†–ï–î–ù–ò–ô (–æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞)")
    print("3. –†–ê–î–ò–ö–ê–õ–¨–ù–´–ô —Ç–æ–ª—å–∫–æ –≤ –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ")
    print("\nüìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    print("1. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ –æ–±—É—á–µ–Ω–∏—è")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python recovery_script.py")
    print("3. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è")

if __name__ == "__main__":
    main()