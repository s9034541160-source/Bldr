#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Neo4j
"""

import os
from dotenv import load_dotenv
from neo4j import GraphDatabase

load_dotenv()

NEO4J_URI = os.getenv("NEO4J_URI", "neo4j://127.0.0.1:7687")
NEO4J_USER = os.getenv("NEO4J_USER", "neo4j")
NEO4J_PASSWORD = os.getenv("NEO4J_PASSWORD", "neopassword")

def test_neo4j_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Neo4j —Å —Ä–∞–∑–Ω—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏"""
    
    print("üîç –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Neo4j")
    print("=" * 40)
    print(f"URI: {NEO4J_URI}")
    print(f"User: {NEO4J_USER}")
    print(f"Password: {'*' * len(NEO4J_PASSWORD)}")
    print()
    
    # –¢–µ—Å—Ç 1: –û—Å–Ω–æ–≤–Ω–æ–π URI
    print("1Ô∏è‚É£ –¢–µ—Å—Ç —Å –æ—Å–Ω–æ–≤–Ω—ã–º URI...")
    try:
        driver = GraphDatabase.driver(NEO4J_URI, auth=(NEO4J_USER, NEO4J_PASSWORD))
        with driver.session() as session:
            result = session.run("RETURN 'Connection successful' as message")
            record = result.single()
            print(f"‚úÖ –£—Å–ø–µ—Ö: {record['message']}")
            driver.close()
            return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: localhost –≤–º–µ—Å—Ç–æ 127.0.0.1
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç —Å localhost...")
    try:
        uri_localhost = "neo4j://localhost:7687"
        driver = GraphDatabase.driver(uri_localhost, auth=(NEO4J_USER, NEO4J_PASSWORD))
        with driver.session() as session:
            result = session.run("RETURN 'Connection successful with localhost' as message")
            record = result.single()
            print(f"‚úÖ –£—Å–ø–µ—Ö: {record['message']}")
            driver.close()
            return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: bolt:// –ø—Ä–æ—Ç–æ–∫–æ–ª
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç —Å bolt –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–º...")
    try:
        uri_bolt = "bolt://localhost:7687"
        driver = GraphDatabase.driver(uri_bolt, auth=(NEO4J_USER, NEO4J_PASSWORD))
        with driver.session() as session:
            result = session.run("RETURN 'Connection successful with bolt' as message")
            record = result.single()
            print(f"‚úÖ –£—Å–ø–µ—Ö: {record['message']}")
            driver.close()
            return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ü—É—Å—Ç–æ–π –ø–∞—Ä–æ–ª—å (–¥–µ—Ñ–æ–ª—Ç)
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç —Å –ø—É—Å—Ç—ã–º –ø–∞—Ä–æ–ª–µ–º...")
    try:
        driver = GraphDatabase.driver(NEO4J_URI, auth=(NEO4J_USER, ""))
        with driver.session() as session:
            result = session.run("RETURN 'Connection successful with empty password' as message")
            record = result.single()
            print(f"‚úÖ –£—Å–ø–µ—Ö: {record['message']}")
            driver.close()
            return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 5: –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å neo4j
    print("\n5Ô∏è‚É£ –¢–µ—Å—Ç —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º 'neo4j'...")
    try:
        driver = GraphDatabase.driver(NEO4J_URI, auth=(NEO4J_USER, "neo4j"))
        with driver.session() as session:
            result = session.run("RETURN 'Connection successful with default password' as message")
            record = result.single()
            print(f"‚úÖ –£—Å–ø–µ—Ö: {record['message']}")
            driver.close()
            return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n‚ùå –í—Å–µ —Ç–µ—Å—Ç—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å")
    print("üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Neo4j Desktop –∑–∞–ø—É—â–µ–Ω")
    print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–Ω—Å—Ç–∞–Ω—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∞–∫—Ç–∏–≤–µ–Ω")
    print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ Neo4j Desktop")
    print("   4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ—Ä—Ç 7687 –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
    
    return False

if __name__ == "__main__":
    test_neo4j_connection()