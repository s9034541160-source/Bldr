#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–∏—Å–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –æ–±—É—á–µ–Ω–∏—è
"""

import requests
import os
from dotenv import load_dotenv

load_dotenv()

API_BASE = "http://localhost:8000"
API_TOKEN = os.getenv("API_TOKEN")

def test_quick_search():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø–æ–∏—Å–∫–∞"""
    if not API_TOKEN:
        print("‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ API")
        return
    
    headers = {"Authorization": f"Bearer {API_TOKEN}"}
    
    test_queries = [
        "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–æ—Ä–º—ã",
        "–ì–û–°–¢",
        "–°–ü", 
        "—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ"
    ]
    
    print("üîç –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –æ–±—É—á–µ–Ω–∏—è:")
    print("=" * 50)
    
    total_results = 0
    
    for query in test_queries:
        try:
            response = requests.post(
                f"{API_BASE}/query",
                json={"query": query, "k": 3},
                headers=headers,
                timeout=15
            )
            
            if response.status_code == 200:
                data = response.json()
                results = data.get('results', [])
                count = len(results)
                total_results += count
                
                print(f"‚úÖ '{query}': {count} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
                
                if count > 0:
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    first = results[0]
                    chunk = first.get('chunk', '')[:100]
                    score = first.get('score', 0)
                    print(f"   üìÑ [{score:.3f}] {chunk}...")
                    
            else:
                print(f"‚ùå '{query}': –æ—à–∏–±–∫–∞ {response.status_code}")
                print(f"   {response.text}")
                
        except Exception as e:
            print(f"‚ö†Ô∏è '{query}': {e}")
    
    print()
    print(f"üìä –í—Å–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {total_results}")
    
    if total_results == 0:
        print("‚ÑπÔ∏è  –ü–æ–∫–∞ –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ - –æ–±—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è")
        print("üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç")
    elif total_results < 5:
        print("‚ö° –ù–∞—á–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—è–≤–ª—è—é—Ç—Å—è!")
        print("üîÑ –û–±—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è")  
    else:
        print("üéâ –û—Ç–ª–∏—á–Ω–æ! RAG —Å–∏—Å—Ç–µ–º–∞ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("üí° –ú–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã")

if __name__ == "__main__":
    test_quick_search()