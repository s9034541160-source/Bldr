#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Neo4j - –ø–æ–¥–æ–∂–¥–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª–∏
"""

import os
import time
from dotenv import load_dotenv
from neo4j import GraphDatabase

load_dotenv()

NEO4J_URI = os.getenv("NEO4J_URI", "neo4j://localhost:7687")
NEO4J_USER = os.getenv("NEO4J_USER", "neo4j")

def wait_for_auth_unblock():
    """–ñ–¥—ë–º –ø–æ–∫–∞ Neo4j —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é"""
    print("‚è±Ô∏è  –û–∂–∏–¥–∞–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Neo4j...")
    print("   (–û–±—ã—á–Ω–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–ª–∏—Ç—Å—è 5 –º–∏–Ω—É—Ç)")
    
    for i in range(5, 0, -1):
        print(f"   –û—Å—Ç–∞–ª–æ—Å—å –ø—Ä–∏–º–µ—Ä–Ω–æ {i} –º–∏–Ω—É—Ç...")
        time.sleep(60)  # –ñ–¥—ë–º –º–∏–Ω—É—Ç—É
    
    print("‚úÖ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –ø—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è")

def test_common_passwords():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ Neo4j"""
    common_passwords = [
        "",  # –ü—É—Å—Ç–æ–π –ø–∞—Ä–æ–ª—å
        "neo4j",  # –î–µ—Ñ–æ–ª—Ç–Ω—ã–π
        "password",  # –ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π
        "admin",  # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π
        "123456",  # –ü—Ä–æ—Å—Ç–æ–π
        "neopassword",  # –ù–∞—à —Ü–µ–ª–µ–≤–æ–π
        "neo4jpassword",  # –í–∞—Ä–∏–∞–Ω—Ç
        "test",  # –¢–µ—Å—Ç–æ–≤—ã–π
    ]
    
    print("üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø–∞—Ä–æ–ª–µ–π...")
    
    for password in common_passwords:
        print(f"   –ü—Ä–æ–±—É–µ–º –ø–∞—Ä–æ–ª—å: {'(–ø—É—Å—Ç–æ–π)' if password == '' else password}")
        
        try:
            driver = GraphDatabase.driver(NEO4J_URI, auth=(NEO4J_USER, password))
            with driver.session() as session:
                result = session.run("RETURN 'Success!' as message")
                record = result.single()
                print(f"   ‚úÖ –£–°–ü–ï–•! –ü–∞—Ä–æ–ª—å –Ω–∞–π–¥–µ–Ω: '{password}'")
                driver.close()
                
                # –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª
                update_env_password(password)
                return password
                
        except Exception as e:
            if "AuthenticationRateLimit" in str(e):
                print("   ‚è∏Ô∏è  –í—Å—ë –µ—â—ë –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ, –∂–¥—ë–º...")
                time.sleep(30)
                continue
            else:
                print(f"   ‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å")
    
    return None

def update_env_password(password):
    """–û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –≤ .env —Ñ–∞–π–ª–µ"""
    env_file = ".env"
    lines = []
    
    try:
        with open(env_file, 'r') as f:
            lines = f.readlines()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Å –ø–∞—Ä–æ–ª–µ–º
        for i, line in enumerate(lines):
            if line.startswith("NEO4J_PASSWORD="):
                lines[i] = f"NEO4J_PASSWORD={password}\r\n"
                break
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            lines.append(f"NEO4J_PASSWORD={password}\r\n")
        
        with open(env_file, 'w') as f:
            f.writelines(lines)
        
        print(f"‚úÖ –ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω –≤ .env —Ñ–∞–π–ª–µ: {password}")
        
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .env: {e}")

def main():
    print("üîß –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Neo4j")
    print("=" * 50)
    
    # –°–Ω–∞—á–∞–ª–∞ –∂–¥—ë–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    wait_for_auth_unblock()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª–∏
    found_password = test_common_passwords()
    
    if found_password is not None:
        print("\nüéâ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Neo4j –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
        print(f"   URI: {NEO4J_URI}")
        print(f"   User: {NEO4J_USER}")
        print(f"   Password: {found_password}")
        print("\n‚úÖ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å RAG –æ–±—É—á–µ–Ω–∏–µ —Å –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é")
        return True
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
        print("üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
        print("   1. –û—Ç–∫—Ä—ã—Ç—å Neo4j Desktop")
        print("   2. –ó–∞–π—Ç–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        print("   3. –°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –Ω–∞ 'neopassword'")
        print("   4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Å—Ç–∞–Ω—Å")
        return False

if __name__ == "__main__":
    main()