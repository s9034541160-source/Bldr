#!/usr/bin/env python3
"""
Check Neo4j Status
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Neo4j –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º
"""

import os
import sys
import json
import requests
from pathlib import Path

def check_neo4j_connection():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Neo4j"""
    print("üîå –ü–†–û–í–ï–†–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö NEO4J")
    print("=" * 40)
    
    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Neo4j
    neo4j_configs = [
        {"url": "http://localhost:7474", "bolt": "bolt://localhost:7687"},
        {"url": "http://localhost:7475", "bolt": "bolt://localhost:7688"},
        {"url": "http://127.0.0.1:7474", "bolt": "bolt://127.0.0.1:7687"}
    ]
    
    for config in neo4j_configs:
        try:
            print(f"–ü—Ä–æ–≤–µ—Ä—è–µ–º: {config['url']}")
            response = requests.get(config['url'], timeout=5)
            if response.status_code == 200:
                print(f"‚úÖ Neo4j –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ {config['url']}")
                print(f"   Bolt: {config['bolt']}")
                return config
            else:
                print(f"‚ùå Neo4j –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
        except requests.exceptions.RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    print("‚ùå Neo4j –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø–æ—Ä—Ç–∞—Ö")
    return None

def check_training_progress():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—É—á–µ–Ω–∏—è"""
    print("\nüìä –ü–†–û–í–ï–†–ö–ê –ü–†–û–ì–†–ï–°–°–ê –û–ë–£–ß–ï–ù–ò–Ø")
    print("=" * 35)
    
    cache_dir = Path("I:/docs/downloaded/cache")
    if not cache_dir.exists():
        print("‚ùå –ö—ç—à –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    # –ü–æ–¥—Å—á–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    sequence_files = list(cache_dir.glob("sequences_*.json"))
    embedding_files = list(cache_dir.glob("embeddings_*.json"))
    
    print(f"üìÅ –§–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π: {len(sequence_files)}")
    print(f"üß† –§–∞–π–ª–æ–≤ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤: {len(embedding_files)}")
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–º–µ—Ä–æ–≤
    total_sequences_size = sum(f.stat().st_size for f in sequence_files)
    total_embeddings_size = sum(f.stat().st_size for f in embedding_files)
    
    print(f"üíæ –†–∞–∑–º–µ—Ä –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π: {total_sequences_size / 1024 / 1024:.2f} MB")
    print(f"üíæ –†–∞–∑–º–µ—Ä —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤: {total_embeddings_size / 1024 / 1024:.2f} MB")
    
    # –ü–æ–∏—Å–∫ –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    problematic_pattern = "*gesn_28_chast_28*"
    problematic_files = list(cache_dir.glob(problematic_pattern))
    
    if problematic_files:
        print(f"\n‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞:")
        for f in problematic_files:
            print(f"   {f.name} ({f.stat().st_size} bytes)")
    else:
        print(f"\n‚úÖ –ü—Ä–æ–±–ª–µ–º–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫—ç—à–µ")

def suggest_action():
    """–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π"""
    print("\nüéØ –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ï –î–ï–ô–°–¢–í–ò–Ø")
    print("=" * 30)
    
    neo4j_status = check_neo4j_connection()
    
    if neo4j_status:
        print("‚úÖ Neo4j —Ä–∞–±–æ—Ç–∞–µ—Ç - –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ")
        print("\nüìã –ü–õ–ê–ù –î–ï–ô–°–¢–í–ò–ô:")
        print("1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–µ–∫—É—â–µ–µ –æ–±—É—á–µ–Ω–∏–µ (Ctrl+C)")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python quick_neo4j_fix.py")
        print("3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º —Å–∫—Ä–∏–ø—Ç–∞")
    else:
        print("‚ùå Neo4j –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("\nüìã –ü–õ–ê–ù –î–ï–ô–°–¢–í–ò–ô:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Neo4j Desktop")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω–∞")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—Ä—Ç—ã 7474 –∏ 7687")
        print("4. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç NEO4J STATUS CHECKER")
    print("=" * 30)
    
    check_training_progress()
    suggest_action()
    
    print(f"\nüí° –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø")
    print("=" * 35)
    print("‚Ä¢ –û—à–∏–±–∫–∞ 'object cannot be re-sized' - —ç—Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ Neo4j")
    print("‚Ä¢ –û–±—ã—á–Ω–æ —Ä–µ—à–∞–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º Neo4j")
    print("‚Ä¢ –î–∞–Ω–Ω—ã–µ –≤ –∫—ç—à–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –Ω–µ –ø–æ—Ç–µ—Ä—è—é—Ç—Å—è")
    print("‚Ä¢ –û–±—É—á–µ–Ω–∏–µ –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å —Ç–æ–≥–æ –∂–µ –º–µ—Å—Ç–∞")

if __name__ == "__main__":
    main()