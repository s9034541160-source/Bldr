#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import os
import sys
import subprocess
import time
import signal
from pathlib import Path

def start_server():
    """–ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º FastAPI —Å–µ—Ä–≤–µ—Ä...")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env = os.environ.copy()
    env['SKIP_NEO4J'] = 'true'  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º Neo4j –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ uvicorn
    cmd = [
        sys.executable, '-m', 'uvicorn', 
        'app.main:app', 
        '--host', '0.0.0.0', 
        '--port', '8001',
        '--reload'
    ]
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        process = subprocess.Popen(
            cmd, 
            cwd=r'C:\Bldr',
            env=env,
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
            text=True,
            bufsize=1,
            universal_newlines=True
        )
        
        print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —Å PID: {process.pid}")
        print("üåê –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8001")
        print("üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8001/docs")
        print("\nüìã –õ–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞:")
        print("-" * 50)
        
        # –ß–∏—Ç–∞–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –ª–æ–≥–∏
        try:
            for line in iter(process.stdout.readline, ''):
                if line:
                    print(line.rstrip())
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
                    if "Uvicorn running on" in line:
                        print("\n‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
                        print("üîç –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: python test_fixes.py")
                        
        except KeyboardInterrupt:
            print("\n\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
            process.terminate()
            time.sleep(2)
            if process.poll() is None:
                process.kill()
            print("‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return False
        
    return True

def check_port():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å–≤–æ–±–æ–¥–µ–Ω –ª–∏ –ø–æ—Ä—Ç 8001"""
    import socket
    
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        result = s.connect_ex(('localhost', 8001))
        if result == 0:
            print("‚ö†Ô∏è –ü–æ—Ä—Ç 8001 —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è")
            return False
        else:
            print("‚úÖ –ü–æ—Ä—Ç 8001 —Å–≤–æ–±–æ–¥–µ–Ω")
            return True

if __name__ == "__main__":
    print("üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø—É—Å–∫—É API —Å–µ—Ä–≤–µ—Ä–∞")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç
    if not check_port():
        print("üí° –í–æ–∑–º–æ–∂–Ω–æ, —Å–µ—Ä–≤–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
        print("   python test_fixes.py")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if not os.path.exists(r'C:\Bldr\app\main.py'):
        print("‚ùå –§–∞–π–ª app/main.py –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ C:\\Bldr")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")
        sys.exit(1)
    
    print("üìÇ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: C:\\Bldr")
    print("üîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: SKIP_NEO4J=true")
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    start_server()