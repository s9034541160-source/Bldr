#!/usr/bin/env python3
"""
Quick test for current query functionality
"""

import requests
import json
from dotenv import load_dotenv
import os

load_dotenv()

def test_query():
    API_TOKEN = os.getenv('API_TOKEN')
    headers = {
        'Authorization': f'Bearer {API_TOKEN}',
        'Content-Type': 'application/json'
    }
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∑–∞–ø—Ä–æ—Å–æ–≤...")
    
    test_queries = [
        "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ",
        "–±–µ—Ç–æ–Ω", 
        "–¥–æ–∫—É–º–µ–Ω—Ç",
        "—Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è"
    ]
    
    for query in test_queries:
        print(f"\nüéØ –¢–µ—Å—Ç –∑–∞–ø—Ä–æ—Å–∞: '{query}'")
        
        try:
            response = requests.post(
                'http://localhost:8000/query',
                json={'query': query, 'k': 3},
                headers=headers,
                timeout=30
            )
            
            if response.status_code == 200:
                data = response.json()
                results = data.get('results', [])
                ndcg = data.get('ndcg', 0)
                
                print(f"   ‚úÖ –°—Ç–∞—Ç—É—Å: 200 OK")
                print(f"   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(results)}")
                print(f"   üìà NDCG: {ndcg}")
                
                if results:
                    best_result = results[0]
                    score = best_result.get('score', 0)
                    chunk = best_result.get('chunk', '')[:100]
                    print(f"   üéØ –õ—É—á—à–∏–π score: {score:.3f}")
                    print(f"   üìÑ –ü—Ä–µ–≤—å—é: {chunk}...")
                else:
                    print("   ‚ö†Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    
            else:
                print(f"   ‚ùå HTTP {response.status_code}: {response.text}")
                
        except Exception as e:
            print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {str(e)}")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–∞–∫–∂–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ trainer
    print(f"\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è trainer...")
    try:
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ trainer —á–µ—Ä–µ–∑ API
        health_response = requests.get('http://localhost:8000/health', timeout=10)
        if health_response.status_code == 200:
            health_data = health_response.json()
            print(f"   üè• Health status: {health_data.get('status', 'unknown')}")
            
            components = health_data.get('components', {})
            for component, status in components.items():
                print(f"   üì¶ {component}: {status}")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ health check: {str(e)}")

if __name__ == '__main__':
    test_query()