#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
–£—Å—Ç–∞–Ω–æ–≤–∫–∞ poppler –¥–ª—è pdf2image –Ω–∞ Windows
"""

import os
import sys
import urllib.request
import zipfile
import shutil
from pathlib import Path

def setup_poppler():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ poppler –Ω–∞ Windows"""
    
    print("üîß –£–°–¢–ê–ù–û–í–ö–ê POPPLER –î–õ–Ø PDF2IMAGE")
    print("=" * 40)
    
    # –ü—É—Ç–∏
    poppler_dir = Path("C:/poppler")
    poppler_bin = poppler_dir / "bin"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ poppler
    if poppler_bin.exists():
        pdftoppm_path = poppler_bin / "pdftoppm.exe"
        if pdftoppm_path.exists():
            print(f"‚úÖ Poppler —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {poppler_bin}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH
            current_path = os.environ.get('PATH', '')
            poppler_bin_str = str(poppler_bin)
            if poppler_bin_str not in current_path:
                os.environ['PATH'] = f"{poppler_bin_str};{current_path}"
                print(f"‚úÖ Poppler –¥–æ–±–∞–≤–ª–µ–Ω –≤ PATH: {poppler_bin_str}")
            
            return True
    
    print("üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ poppler...")
    
    # URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è poppler (–≤–µ—Ä—Å–∏—è 24.02.0)
    poppler_url = "https://github.com/oschwartz10612/poppler-windows/releases/download/v24.02.0-0/Release-24.02.0-0.zip"
    zip_path = "poppler.zip"
    
    try:
        # –°–∫–∞—á–∏–≤–∞–µ–º poppler
        print(f"üîÑ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ {poppler_url}...")
        urllib.request.urlretrieve(poppler_url, zip_path)
        print(f"‚úÖ –°–∫–∞—á–∞–Ω–æ: {zip_path}")
        
        # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º
        print("üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞...")
        with zipfile.ZipFile(zip_path, 'r') as zip_ref:
            zip_ref.extractall(".")
        
        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–∞–ø–∫—É
        extracted_folder = None
        for item in os.listdir("."):
            if os.path.isdir(item) and "poppler" in item.lower():
                extracted_folder = item
                break
        
        if extracted_folder:
            print(f"üîÑ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ {extracted_folder} -> {poppler_dir}")
            if poppler_dir.exists():
                shutil.rmtree(poppler_dir)
            shutil.move(extracted_folder, poppler_dir)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
            pdftoppm_path = poppler_bin / "pdftoppm.exe"
            if pdftoppm_path.exists():
                print(f"‚úÖ Poppler —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ: {poppler_bin}")
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH
                current_path = os.environ.get('PATH', '')
                poppler_bin_str = str(poppler_bin)
                if poppler_bin_str not in current_path:
                    os.environ['PATH'] = f"{poppler_bin_str};{current_path}"
                    print(f"‚úÖ Poppler –¥–æ–±–∞–≤–ª–µ–Ω –≤ PATH")
                
                return True
            else:
                print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω pdftoppm.exe –≤ {poppler_bin}")
                return False
        else:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ poppler –≤ –∞—Ä—Ö–∏–≤–µ")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ poppler: {e}")
        return False
        
    finally:
        # –û—á–∏—Å—Ç–∫–∞
        if os.path.exists(zip_path):
            os.remove(zip_path)

def test_poppler():
    """–¢–µ—Å—Ç poppler"""
    print("\nüß™ –¢–ï–°–¢ POPPLER")
    print("=" * 20)
    
    try:
        import pdf2image
        
        # –ù–∞–π–¥–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π PDF
        test_pdf = None
        search_paths = [
            "I:/docs/downloaded",
            "C:/temp",
            os.getcwd()
        ]
        
        for search_path in search_paths:
            if os.path.exists(search_path):
                for file in os.listdir(search_path):
                    if file.endswith('.pdf'):
                        test_pdf = os.path.join(search_path, file)
                        break
                if test_pdf:
                    break
        
        if test_pdf:
            print(f"üîç –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_pdf}")
            
            # –ü—Ä–æ–±—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
            images = pdf2image.convert_from_path(
                test_pdf, 
                dpi=150, 
                first_page=1, 
                last_page=1
            )
            
            if images:
                print(f"‚úÖ PDF2IMAGE –†–ê–ë–û–¢–ê–ï–¢! –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ {len(images)} —Å—Ç—Ä–∞–Ω–∏—Ü")
                return True
            else:
                print("‚ùå PDF2IMAGE –Ω–µ —Å–º–æ–≥ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
                return False
        else:
            print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ PDF —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ poppler: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üöÄ –ù–ê–°–¢–†–û–ô–ö–ê OCR –ò–ù–§–†–ê–°–¢–†–£–ö–¢–£–†–´")
    print("=" * 50)
    
    success = setup_poppler()
    
    if success:
        test_success = test_poppler()
        if test_success:
            print("\nüéâ POPPLER –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï!")
            sys.exit(0)
        else:
            print("\n‚ùå POPPLER –ù–ï –ü–†–û–®–ï–õ –¢–ï–°–¢!")
            sys.exit(1)
    else:
        print("\n‚ùå POPPLER –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù!")
        sys.exit(1)