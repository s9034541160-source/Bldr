#!/usr/bin/env python3
"""
Clean Start Training
–ß–∏—Å—Ç—ã–π —Å—Ç–∞—Ä—Ç –æ–±—É—á–µ–Ω–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
"""

import os
import time
import requests
import subprocess
from pathlib import Path

def check_neo4j_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Neo4j"""
    print("üîå –ü–†–û–í–ï–†–ö–ê NEO4J")
    print("=" * 20)
    
    neo4j_urls = ["http://localhost:7474", "http://127.0.0.1:7474"]
    
    for url in neo4j_urls:
        try:
            response = requests.get(url, timeout=5)
            if response.status_code == 200:
                print(f"‚úÖ Neo4j —Ä–∞–±–æ—Ç–∞–µ—Ç: {url}")
                return True
        except requests.exceptions.RequestException:
            continue
    
    print("‚ùå Neo4j –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    return False

def start_neo4j():
    """–ó–∞–ø—É—Å–∫ Neo4j Desktop"""
    print("üöÄ –ó–ê–ü–£–°–ö NEO4J DESKTOP")
    print("=" * 25)
    
    neo4j_paths = [
        r"C:\Users\%USERNAME%\AppData\Local\Programs\Neo4j Desktop\Neo4j Desktop.exe",
        r"C:\Program Files\Neo4j Desktop\Neo4j Desktop.exe"
    ]
    
    for path in neo4j_paths:
        expanded_path = os.path.expandvars(path)
        if os.path.exists(expanded_path):
            print(f"   –ó–∞–ø—É—Å–∫–∞–µ–º: {expanded_path}")
            subprocess.Popen([expanded_path])
            return True
    
    print("‚ùå Neo4j Desktop –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return False

def wait_for_neo4j():
    """–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Neo4j"""
    print("‚è≥ –û–ñ–ò–î–ê–ù–ò–ï –ó–ê–ü–£–°–ö–ê NEO4J")
    print("=" * 30)
    
    max_attempts = 12  # 60 —Å–µ–∫—É–Ω–¥
    for attempt in range(max_attempts):
        if check_neo4j_status():
            print("‚úÖ Neo4j –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
            return True
        
        print(f"   –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{max_attempts}... (—á–µ—Ä–µ–∑ 5 —Å–µ–∫)")
        time.sleep(5)
    
    print("‚ùå Neo4j –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ 60 —Å–µ–∫—É–Ω–¥")
    return False

def verify_clean_state():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
    print("üßπ –ü–†–û–í–ï–†–ö–ê –ß–ò–°–¢–û–ì–û –°–û–°–¢–û–Ø–ù–ò–Ø")
    print("=" * 35)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫—ç—à –æ—á–∏—â–µ–Ω
    cache_dir = Path("I:/docs/downloaded/cache")
    if cache_dir.exists():
        cache_files = list(cache_dir.glob("*.json"))
        if cache_files:
            print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –∫—ç—à–∞: {len(cache_files)}")
            return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º processed_files.json
    processed_file = Path("I:/docs/downloaded/processed_files.json")
    if processed_file.exists():
        print("‚ö†Ô∏è –ù–∞–π–¥–µ–Ω processed_files.json")
        return False
    
    print("‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —á–∏—Å—Ç–æ–µ - –º–æ–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ")
    return True

def start_safe_training():
    """–ó–∞–ø—É—Å–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è"""
    print("üõ°Ô∏è –ó–ê–ü–£–°–ö –ë–ï–ó–û–ü–ê–°–ù–û–ì–û –û–ë–£–ß–ï–ù–ò–Ø")
    print("=" * 35)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä
        result = subprocess.run([
            "python", 
            "enterprise_rag_trainer_safe.py",
            "--custom_dir", "I:/docs/downloaded",
            "--fast_mode"
        ], capture_output=False, text=True)
        
        return result.returncode == 0
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ–±—É—á–µ–Ω–∏—è: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —á–∏—Å—Ç–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞"""
    print("üßπ –ß–ò–°–¢–´–ô –°–¢–ê–†–¢ –û–ë–£–ß–ï–ù–ò–Ø RAG")
    print("=" * 40)
    print("–ü–æ—Å–ª–µ —è–¥–µ—Ä–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ –≤—Å–µ—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö")
    print()
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∏—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if not verify_clean_state():
        print("‚ùå –°–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ —á–∏—Å—Ç–æ–µ! –ó–∞–ø—É—Å—Ç–∏—Ç–µ emergency_full_reset.py")
        return False
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º Neo4j
    if not check_neo4j_status():
        print("Neo4j –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å...")
        
        if not start_neo4j():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Neo4j Desktop")
            print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ Neo4j Desktop –≤—Ä—É—á–Ω—É—é –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ")
            return False
        
        if not wait_for_neo4j():
            print("‚ùå Neo4j –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è")
            print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Neo4j Desktop –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ")
            return False
    
    # 3. –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ
    print("\nüöÄ –í–°–ï –ì–û–¢–û–í–û! –ó–ê–ü–£–°–ö–ê–ï–ú –û–ë–£–ß–ï–ù–ò–ï...")
    print("=" * 40)
    print("‚ö†Ô∏è –û–±—É—á–µ–Ω–∏–µ –Ω–∞—á–Ω–µ—Ç—Å—è —Å —Ñ–∞–π–ª–∞ ‚Ññ1")
    print("‚ö†Ô∏è –í—Å–µ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω—ã –ø–æ –ø–∞–ø–∫–∞–º")
    print("‚ö†Ô∏è –ó–∞—â–∏—Ç–∞ –æ—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞")
    print()
    
    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ–±—É—á–µ–Ω–∏—è...")
    
    success = start_safe_training()
    
    if success:
        print("\nüéâ –û–ë–£–ß–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
    else:
        print("\n‚ùå –û–ë–£–ß–ï–ù–ò–ï –ó–ê–í–ï–†–®–ò–õ–û–°–¨ –° –û–®–ò–ë–ö–û–ô")
    
    return success

if __name__ == "__main__":
    main()