#!/usr/bin/env python3
"""
RAG Training Recovery Script
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è RAG –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ Neo4j
"""

import os
import sys
import json
import shutil
from pathlib import Path

def stop_training():
    """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –æ–±—É—á–µ–Ω–∏—è"""
    print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –æ–±—É—á–µ–Ω–∏—è...")
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è graceful shutdown
    
def restart_neo4j():
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Neo4j"""
    print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Neo4j...")
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Neo4j
    os.system("net stop neo4j")  # Windows
    os.system("net start neo4j")  # Windows
    # –î–ª—è Linux: systemctl restart neo4j
    
def clean_problematic_cache():
    """–û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ –∫—ç—à–∞"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ –∫—ç—à–∞...")
    
    problematic_file = "gesn_28_chast_28._zheleznye_dorogi.pdf"
    cache_patterns = [
        f"sequences_{problematic_file.replace('.pdf', '.json')}",
        f"embeddings_{problematic_file.replace('.pdf', '.json')}",
        f"chunks_{problematic_file.replace('.pdf', '.json')}"
    ]
    
    cache_dirs = [
        "I:/docs/downloaded/cache",
        "./cache", 
        "./data/cache"
    ]
    
    for cache_dir in cache_dirs:
        if os.path.exists(cache_dir):
            for pattern in cache_patterns:
                cache_file = Path(cache_dir) / pattern
                if cache_file.exists():
                    print(f"   –£–¥–∞–ª—è–µ–º: {cache_file}")
                    cache_file.unlink()

def resume_training():
    """–í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–∏—è"""
    print("‚ñ∂Ô∏è –í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–∏—è...")
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è
    resume_command = """
    python enterprise_rag_trainer_full.py --resume --skip-processed --neo4j-retry 3 --batch-size 1
    """
    
    print("–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:")
    print(resume_command)

def full_reset():
    """–ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö"""
    print("üí• –ü–û–õ–ù–´–ô –°–ë–†–û–° –ë–ê–ó–î–î–ê–ù–ù–´–•")
    print("‚ö†Ô∏è –≠–¢–û –£–î–ê–õ–ò–¢ –í–°–ï –û–ë–£–ß–ï–ù–ù–´–ï –î–ê–ù–ù–´–ï!")
    
    confirm = input("–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í–≤–µ–¥–∏—Ç–µ 'YES' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ")
    if confirm != "YES":
        print("–û—Ç–º–µ–Ω–µ–Ω–æ")
        return
        
    # –û—á–∏—Å—Ç–∫–∞ Neo4j
    print("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ Neo4j...")
    # –ó–¥–µ—Å—å –∫–æ–¥ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ Neo4j
    
    # –û—á–∏—Å—Ç–∫–∞ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã
    print("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã...")
    # –ó–¥–µ—Å—å –∫–æ–¥ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ Chroma/FAISS
    
    # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    print("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞...")
    cache_dirs = ["./cache", "./data/cache", "I:/docs/downloaded/cache"]
    for cache_dir in cache_dirs:
        if os.path.exists(cache_dir):
            shutil.rmtree(cache_dir)
            os.makedirs(cache_dir)
    
    print("‚úÖ –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    print("üöë RAG TRAINING RECOVERY TOOL")
    print("=" * 40)
    
    print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
    print("1. –ú—è–≥–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ (–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ Neo4j)")
    print("2. –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ –∫—ç—à–∞")
    print("3. –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö")
    print("4. –í—ã—Ö–æ–¥")
    
    choice = input("–í–∞—à –≤—ã–±–æ—Ä (1-4): ")
    
    if choice == "1":
        stop_training()
        restart_neo4j()
        resume_training()
    elif choice == "2":
        stop_training()
        clean_problematic_cache()
        restart_neo4j()
        resume_training()
    elif choice == "3":
        full_reset()
    else:
        print("–í—ã—Ö–æ–¥")
