"""
–°–∫–∞—á–∏–≤–∞–Ω–∏–µ GGUF –º–æ–¥–µ–ª–∏ Qwen3-8B –¥–ª—è –≥–∏–±—Ä–∏–¥–Ω–æ–≥–æ –∞–Ω—Å–∞–º–±–ª—è
"""

import os
import requests
from tqdm import tqdm
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def download_file(url: str, filepath: str):
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º"""
    try:
        response = requests.get(url, stream=True)
        response.raise_for_status()
        
        total_size = int(response.headers.get('content-length', 0))
        
        with open(filepath, 'wb') as f:
            with tqdm(total=total_size, unit='B', unit_scale=True, desc=os.path.basename(filepath)) as pbar:
                for chunk in response.iter_content(chunk_size=8192):
                    if chunk:
                        f.write(chunk)
                        pbar.update(len(chunk))
        
        logger.info(f"‚úÖ –§–∞–π–ª —Å–∫–∞—á–∞–Ω: {filepath}")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {e}")
        return False

def main():
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ GGUF –º–æ–¥–µ–ª–∏ Qwen3-8B"""
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –º–æ–¥–µ–ª–µ–π
    models_dir = "I:/models_cache"
    os.makedirs(models_dir, exist_ok=True)
    
    # URL –¥–ª—è Qwen3-8B GGUF (Q4_K_M - –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –∫–∞—á–µ—Å—Ç–≤–∞/—Ä–∞–∑–º–µ—Ä–∞)
    gguf_url = "https://huggingface.co/Qwen/Qwen3-8B-GGUF/resolve/main/qwen3-8b-q4_k_m.gguf"
    gguf_path = os.path.join(models_dir, "Qwen3-8B-Q4_K_M.gguf")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ñ–∞–π–ª
    if os.path.exists(gguf_path):
        logger.info(f"‚úÖ –ú–æ–¥–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {gguf_path}")
        return
    
    logger.info(f"üîÑ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ Qwen3-8B GGUF...")
    logger.info(f"üìÅ –ü—É—Ç—å: {gguf_path}")
    logger.info(f"üåê URL: {gguf_url}")
    
    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
    success = download_file(gguf_url, gguf_path)
    
    if success:
        file_size = os.path.getsize(gguf_path) / (1024**3)  # GB
        logger.info(f"‚úÖ –ú–æ–¥–µ–ª—å —Å–∫–∞—á–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        logger.info(f"üìä –†–∞–∑–º–µ—Ä: {file_size:.2f} GB")
        logger.info(f"üéØ –ì–æ—Ç–æ–≤–æ –¥–ª—è –≥–∏–±—Ä–∏–¥–Ω–æ–≥–æ –∞–Ω—Å–∞–º–±–ª—è!")
    else:
        logger.error("‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–∏")

if __name__ == "__main__":
    main()
