#!/usr/bin/env python3
"""
–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç DeepSeek-Coder –ë–ï–ó SBERT –∏ RuT5
"""

import os
import sys
import time
import logging

# –û—Ç–∫–ª—é—á–∞–µ–º –∫—ç—à Python
os.environ['PYTHONDONTWRITEBYTECODE'] = '1'
os.environ['PYTHONUNBUFFERED'] = '1'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def test_deepseek_only():
    """–¢–µ—Å—Ç –¢–û–õ–¨–ö–û DeepSeek-Coder –±–µ–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥–µ–ª–µ–π"""
    
    logger.info("=== –ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ô –¢–ï–°–¢ DEEPSEEK-CODER ===")
    
    try:
        from llama_cpp import Llama
        
        logger.info("1. –ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ DeepSeek-Coder...")
        
        # –ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –±–µ–∑ –∞–Ω—Å–∞–º–±–ª—è
        model_path = "I:/models_cache/TheBloke/deepseek-coder-6.7B-instruct-GGUF/deepseek-coder-6.7b-instruct.Q5_K_M.gguf"
        
        if not os.path.exists(model_path):
            logger.error(f"‚ùå –§–∞–π–ª –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {model_path}")
            return False
        
        logger.info(f"2. –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ –∏–∑ {model_path}")
        
        # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏
        llm = Llama(
            model_path=model_path,
            n_ctx=4096,  # –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
            n_gpu_layers=20,  # –ú–µ–Ω—å—à–µ —Å–ª–æ–µ–≤ –Ω–∞ GPU
            n_threads=4,  # –ú–µ–Ω—å—à–µ –ø–æ—Ç–æ–∫–æ–≤
            verbose=False
        )
        
        logger.info("‚úÖ DeepSeek-Coder –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        # –¢–ï–°–¢ 1: –ü—Ä–æ—Å—Ç–µ–π—à–∏–π –ø—Ä–æ–º–ø—Ç
        logger.info("3. –¢–ï–°–¢ 1: –ü—Ä–æ—Å—Ç–µ–π—à–∏–π –ø—Ä–æ–º–ø—Ç...")
        start_time = time.time()
        
        try:
            response = llm(
                "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
                max_tokens=50,
                temperature=0.1,
                stop=["\n"]
            )
            elapsed = time.time() - start_time
            result = response['choices'][0]['text'].strip()
            logger.info(f"‚úÖ –¢–ï–°–¢ 1 –£–°–ü–ï–•: {elapsed:.2f}s - '{result}'")
        except Exception as e:
            logger.error(f"‚ùå –¢–ï–°–¢ 1 –û–®–ò–ë–ö–ê: {e}")
            return False
        
        # –¢–ï–°–¢ 2: –ü—Ä–æ–º–ø—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ (–∫–æ—Ä–æ—Ç–∫–∏–π)
        logger.info("4. –¢–ï–°–¢ 2: –ö–æ—Ä–æ—Ç–∫–∏–π –ø—Ä–æ–º–ø—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏...")
        start_time = time.time()
        
        try:
            prompt = """–ó–ê–î–ê–ß–ê: –ò—Å–ø—Ä–∞–≤—å —Ç–æ–ª—å–∫–æ –æ—á–µ–≤–∏–¥–Ω—ã–µ –æ—à–∏–±–∫–∏.

–¢–ï–ö–°–¢: –≠—Ç–æ —Ç–µ—Å—Ç –æ–≤ —ã–π —Ç–µ–∫—Å—Ç —Å –ø—Ä–æ–±–µ–ª–∞–º–∏.

–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô:"""
            
            response = llm(
                prompt,
                max_tokens=100,
                temperature=0.1,
                stop=["–¢–ï–ö–°–¢:", "–ó–ê–î–ê–ß–ê:"]
            )
            elapsed = time.time() - start_time
            result = response['choices'][0]['text'].strip()
            logger.info(f"‚úÖ –¢–ï–°–¢ 2 –£–°–ü–ï–•: {elapsed:.2f}s - '{result}'")
        except Exception as e:
            logger.error(f"‚ùå –¢–ï–°–¢ 2 –û–®–ò–ë–ö–ê: {e}")
            return False
        
        # –¢–ï–°–¢ 3: –°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–º–ø—Ç
        logger.info("5. –¢–ï–°–¢ 3: –°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–º–ø—Ç...")
        start_time = time.time()
        
        try:
            medium_text = "–°–ü 158.13330.2014 " * 50  # ~1000 —Å–∏–º–≤–æ–ª–æ–≤
            prompt = f"""–ó–ê–î–ê–ß–ê: –ò—Å–ø—Ä–∞–≤—å —Ç–æ–ª—å–∫–æ –æ—á–µ–≤–∏–¥–Ω—ã–µ –æ—à–∏–±–∫–∏.

–¢–ï–ö–°–¢: {medium_text}

–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô:"""
            
            response = llm(
                prompt,
                max_tokens=200,
                temperature=0.1,
                stop=["–¢–ï–ö–°–¢:", "–ó–ê–î–ê–ß–ê:"]
            )
            elapsed = time.time() - start_time
            result = response['choices'][0]['text'].strip()
            logger.info(f"‚úÖ –¢–ï–°–¢ 3 –£–°–ü–ï–•: {elapsed:.2f}s - {len(result)} —Å–∏–º–≤–æ–ª–æ–≤")
        except Exception as e:
            logger.error(f"‚ùå –¢–ï–°–¢ 3 –û–®–ò–ë–ö–ê: {e}")
            return False
        
        # –¢–ï–°–¢ 4: –ë–æ–ª—å—à–æ–π –ø—Ä–æ–º–ø—Ç (–∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –∫–æ–¥–µ)
        logger.info("6. –¢–ï–°–¢ 4: –ë–æ–ª—å—à–æ–π –ø—Ä–æ–º–ø—Ç...")
        start_time = time.time()
        
        try:
            large_text = "–°–ü 158.13330.2014 " * 200  # ~4000 —Å–∏–º–≤–æ–ª–æ–≤
            prompt = f"""–ó–ê–î–ê–ß–ê: –ò—Å–ø—Ä–∞–≤—å —Ç–æ–ª—å–∫–æ –æ—á–µ–≤–∏–¥–Ω—ã–µ –æ—à–∏–±–∫–∏.

–¢–ï–ö–°–¢: {large_text}

–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô:"""
            
            response = llm(
                prompt,
                max_tokens=1000,  # –£–º–µ–Ω—å—à–∞–µ–º max_tokens
                temperature=0.1,
                stop=["–¢–ï–ö–°–¢:", "–ó–ê–î–ê–ß–ê:"]
            )
            elapsed = time.time() - start_time
            result = response['choices'][0]['text'].strip()
            logger.info(f"‚úÖ –¢–ï–°–¢ 4 –£–°–ü–ï–•: {elapsed:.2f}s - {len(result)} —Å–∏–º–≤–æ–ª–æ–≤")
        except Exception as e:
            logger.error(f"‚ùå –¢–ï–°–¢ 4 –û–®–ò–ë–ö–ê: {e}")
            return False
        
        logger.info("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        return False

if __name__ == "__main__":
    logger.info("üöÄ –ó–ê–ü–£–°–ö –ú–ò–ù–ò–ú–ê–õ–¨–ù–û–ì–û –¢–ï–°–¢–ê DEEPSEEK-CODER")
    
    success = test_deepseek_only()
    
    if success:
        logger.info("üéâ DeepSeek-Coder —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü—Ä–æ–±–ª–µ–º–∞ –≤ –∞–Ω—Å–∞–º–±–ª–µ.")
    else:
        logger.error("‚ùå DeepSeek-Coder –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∞–∂–µ –≤ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ!")
    
    logger.info("üèÅ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")
