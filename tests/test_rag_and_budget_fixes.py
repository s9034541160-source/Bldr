#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π RAG trainer –∏ —Å–æ–∑–¥–∞–Ω–∏—è –±—é–¥–∂–µ—Ç–∞
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_rag_file_renaming_fix():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –≤ RAG trainer"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è RAG trainer...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã
        with open('enterprise_rag_trainer_full.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ò—â–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
        if "–ù–ï –ü–ï–†–ï–ò–ú–ï–ù–û–í–´–í–ê–ï–ú –§–ê–ô–õ–´! –û—Å—Ç–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞!" in content:
            print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ RAG trainer –ø—Ä–∏–º–µ–Ω–µ–Ω–æ")
            print("   - –§–∞–π–ª—ã –±–æ–ª—å—à–µ –ù–ï –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞—é—Ç—Å—è")
            print("   - –°–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤")
            return True
        else:
            print("‚ùå –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ RAG trainer –ù–ï –Ω–∞–π–¥–µ–Ω–æ")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ RAG trainer: {e}")
        return False

def test_budget_creation_tool():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—é–¥–∂–µ—Ç–∞"""
    print("\nüí∞ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—é–¥–∂–µ—Ç–∞...")
    
    try:
        from tools.custom.create_budget_from_estimates import execute
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞
        result = execute(
            estimate_files=["test_smeta_simple.xlsx"],
            project_name="–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç",
            output_directory="test_exports",
            include_monthly_planning=True,
            profit_margin_percent=15.0
        )
        
        print(f"–°—Ç–∞—Ç—É—Å: {result.get('status')}")
        
        if result.get('status') == 'success':
            data = result.get('data', {})
            print(f"‚úÖ –ë—é–¥–∂–µ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"   üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–º–µ—Ç: {data.get('total_estimate_cost', 0):,.2f} —Ä—É–±.")
            print(f"   üí∏ –û–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã: {data.get('total_expenses', 0):,.2f} —Ä—É–±.")
            print(f"   üíµ –ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å: {data.get('net_profit', 0):,.2f} —Ä—É–±.")
            print(f"   üìà –ú–∞—Ä–∂–∞ –ø—Ä–∏–±—ã–ª–∏: {data.get('profit_margin', 0):.2f}%")
            print(f"   üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {data.get('parsed_files_count', 0)}")
            print(f"   üìÅ Excel —Ñ–∞–π–ª: {data.get('excel_file_path', 'N/A')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–∑–¥–∞–ª—Å—è –ª–∏ Excel —Ñ–∞–π–ª
            excel_path = data.get('excel_file_path')
            if excel_path and os.path.exists(excel_path):
                print(f"   ‚úÖ Excel —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {excel_path}")
            else:
                print(f"   ‚ö†Ô∏è Excel —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {excel_path}")
            
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—é–¥–∂–µ—Ç–∞: {result.get('error', 'Unknown error')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±—é–¥–∂–µ—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_enhanced_parsers_availability():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –ø–∞—Ä—Å–µ—Ä–æ–≤"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –ø–∞—Ä—Å–µ—Ä–æ–≤...")
    
    try:
        from core.enhanced_smeta_parser import EnhancedSmetaParser
        from core.enhanced_budget_parser import EnhancedBudgetParser
        
        print("‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä —Å–º–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω")
        print("‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –±—é–¥–∂–µ—Ç–∞ –¥–æ—Å—Ç—É–ø–µ–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
        smeta_parser = EnhancedSmetaParser()
        budget_parser = EnhancedBudgetParser()
        
        print("‚úÖ –ü–∞—Ä—Å–µ—Ä—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –ø–∞—Ä—Å–µ—Ä–æ–≤: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô RAG –ò –ë–Æ–î–ñ–ï–¢–ê")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    rag_fix_ok = test_rag_file_renaming_fix()
    parsers_ok = test_enhanced_parsers_availability()
    budget_creation_ok = test_budget_creation_tool()
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"   üîß RAG trainer –∏—Å–ø—Ä–∞–≤–ª–µ–Ω: {'‚úÖ' if rag_fix_ok else '‚ùå'}")
    print(f"   üîç –£–ª—É—á—à–µ–Ω–Ω—ã–µ –ø–∞—Ä—Å–µ—Ä—ã: {'‚úÖ' if parsers_ok else '‚ùå'}")
    print(f"   üí∞ –°–æ–∑–¥–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞: {'‚úÖ' if budget_creation_ok else '‚ùå'}")
    
    if rag_fix_ok and parsers_ok and budget_creation_ok:
        print("\nüéâ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!")
        print("‚úÖ RAG trainer –±–æ–ª—å—à–µ –ù–ï –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ—Ç —Ñ–∞–π–ª—ã")
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–º–µ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–µ –ø–∞—Ä—Å–µ—Ä—ã –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    else:
        print("\n‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –¢–†–ï–ë–£–Æ–¢ –î–û–†–ê–ë–û–¢–ö–ò")
    
    print("=" * 60)

if __name__ == "__main__":
    main()
