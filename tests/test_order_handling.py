#!/usr/bin/env python3
"""
ENTERPRISE RAG 3.0: Order Handling Test
–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–∫–∞–∑–æ–≤ –≤ –°–ü –∏ –ì–û–°–¢
"""

import logging
from enterprise_rag_trainer_full import EnterpriseRAGTrainer, DocumentMetadata

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_order_handling():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–∫–∞–∑–æ–≤"""
    
    logger.info("ENTERPRISE RAG 3.0: Order Handling Test")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–Ω–µ—Ä–∞
        trainer = EnterpriseRAGTrainer()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–∫–∞–∑–æ–≤
        test_methods = [
            '_extract_order_data_with_vlm',
            '_analyze_order_on_page', 
            '_isolate_order_content',
            '_create_order_header_chunk'
        ]
        
        for method_name in test_methods:
            if hasattr(trainer, method_name):
                logger.info(f"‚úÖ –ú–µ—Ç–æ–¥ {method_name} –¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                logger.warning(f"‚ùå –ú–µ—Ç–æ–¥ {method_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—è DocumentMetadata
        metadata = DocumentMetadata()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è –ø—Ä–∏–∫–∞–∑–æ–≤
        order_fields = ['order_number', 'effective_date', 'order_intro']
        for field in order_fields:
            if hasattr(metadata, field):
                logger.info(f"‚úÖ –ü–æ–ª–µ {field} –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ DocumentMetadata")
            else:
                logger.warning(f"‚ùå –ü–æ–ª–µ {field} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ DocumentMetadata")
        
        logger.info("üéâ –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–∫–∞–∑–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–∫–∞–∑–æ–≤ failed: {e}")
        return False

def test_order_workflow():
    """–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ workflow –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–∫–∞–∑–æ–≤"""
    
    logger.info("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ workflow –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–∫–∞–∑–æ–≤...")
    
    # Stage 8: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–∫–∞–∑–∞
    logger.info("Stage 8: VLM-OCR –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–∫–∞–∑–∞")
    logger.info("  - –ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–≤—ã—Ö 2 —Å—Ç—Ä–∞–Ω–∏—Ü PDF")
    logger.info("  - –ü–æ–∏—Å–∫ –Ω–æ–º–µ—Ä–∞ –∏ –¥–∞—Ç—ã –ø—Ä–∏–∫–∞–∑–∞")
    logger.info("  - –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤–≤–æ–¥–Ω–æ–π —á–∞—Å—Ç–∏")
    
    # Stage 10: –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –∏–∑–æ–ª—è—Ü–∏—è
    logger.info("Stage 10: –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –∏–∑–æ–ª—è—Ü–∏—è –ø—Ä–∏–∫–∞–∑–∞")
    logger.info("  - SBERT-–¥–µ—Ç–µ–∫—Ç–æ—Ä —è–∫–æ—Ä—è")
    logger.info("  - –ü–æ–∏—Å–∫ '1. –û–±–ª–∞—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è'")
    logger.info("  - –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –ø—Ä–∏–∫–∞–∑ –∏ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç")
    
    # Stage 13: –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
    logger.info("Stage 13: –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–∫–∞–∑–∞")
    logger.info("  - –°–æ–∑–¥–∞–Ω–∏–µ —á–∞–Ω–∫–∞ ORDER_HEADER")
    logger.info("  - –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞—É–¥–∏—Ç–∞")
    logger.info("  - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Qdrant —Å —Ç–µ–≥–∞–º–∏")
    
    logger.info("‚úÖ Workflow –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–∫–∞–∑–æ–≤ –≥–æ—Ç–æ–≤")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    logger.info("üöÄ ENTERPRISE RAG 3.0: Order Handling Test")
    
    # –¢–µ—Å—Ç –º–µ—Ç–æ–¥–æ–≤
    methods_success = test_order_handling()
    
    # –¢–µ—Å—Ç workflow
    test_order_workflow()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if methods_success:
        logger.info("üéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–∫–∞–∑–æ–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞!")
        logger.info("üí° –¢–µ–ø–µ—Ä—å –≤–∞—à RAG –ø–∞–π–ø–ª–∞–π–Ω —É–º–µ–µ—Ç:")
        logger.info("   - –ò–∑–≤–ª–µ–∫–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–∫–∞–∑–∞ –∏–∑ –°–ü –∏ –ì–û–°–¢")
        logger.info("   - –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏ –∏–∑–æ–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–∫–∞–∑ –æ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
        logger.info("   - –°–æ–∑–¥–∞–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —á–∞–Ω–∫–∏ –¥–ª—è –∞—É–¥–∏—Ç–∞")
        logger.info("   - –°–æ—Ö—Ä–∞–Ω—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–≤–µ–¥–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ –¥–µ–π—Å—Ç–≤–∏–µ")
    else:
        logger.info("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–µ—Ç–æ–¥—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–∫–∞–∑–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")

if __name__ == "__main__":
    main()
