#!/usr/bin/env python3
"""
ENTERPRISE RAG 3.0: Adaptive Order Handling Test
–¢–µ—Å—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–∫–∞–∑–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
"""

import logging
from enterprise_rag_trainer_full import EnterpriseRAGTrainer, DocumentMetadata

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_adaptive_order_scenarios():
    """–¢–µ—Å—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–∫–∞–∑–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤"""
    
    logger.info("ENTERPRISE RAG 3.0: Adaptive Order Handling Test")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–Ω–µ—Ä–∞
        trainer = EnterpriseRAGTrainer()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
        adaptive_methods = [
            '_determine_order_search_pages',
            '_determine_search_window_size',
            '_check_for_order_indicators',
            '_fallback_order_isolation'
        ]
        
        for method_name in adaptive_methods:
            if hasattr(trainer, method_name):
                logger.info(f"‚úÖ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ {method_name} –¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                logger.warning(f"‚ùå –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ {method_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        logger.info("üéâ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–∫–∞–∑–æ–≤ –≥–æ—Ç–æ–≤—ã!")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –¢–µ—Å—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–∫–∞–∑–æ–≤ failed: {e}")
        return False

def test_order_scenarios():
    """–¢–µ—Å—Ç —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ —Å –ø—Ä–∏–∫–∞–∑–∞–º–∏"""
    
    logger.info("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ —Å –ø—Ä–∏–∫–∞–∑–∞–º–∏...")
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ü—Ä–∏–∫–∞–∑ –Ω–∞ 1-2 —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π)
    logger.info("–°—Ü–µ–Ω–∞—Ä–∏–π 1: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–∏–∫–∞–∑ (1-2 —Å—Ç—Ä–∞–Ω–∏—Ü—ã)")
    logger.info("  - VLM –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–µ—Ä–≤—ã–µ 3-5 —Å—Ç—Ä–∞–Ω–∏—Ü")
    logger.info("  - SBERT –Ω–∞—Ö–æ–¥–∏—Ç —è–∫–æ—Ä—å '1. –û–±–ª–∞—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è'")
    logger.info("  - –ò–∑–æ–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ü—Ä–∏–∫–∞–∑ –Ω–∞ 4+ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö (–¥–ª–∏–Ω–Ω—ã–π)
    logger.info("–°—Ü–µ–Ω–∞—Ä–∏–π 2: –î–ª–∏–Ω–Ω—ã–π –ø—Ä–∏–∫–∞–∑ (4+ —Å—Ç—Ä–∞–Ω–∏—Ü—ã)")
    logger.info("  - –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ –¥–æ 5 —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –°–ü")
    logger.info("  - –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–∏—Å–∫–∞ —è–∫–æ—Ä—è")
    logger.info("  - Fallback –∏–∑–æ–ª—è—Ü–∏—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏")
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 3: –î–æ–∫—É–º–µ–Ω—Ç –±–µ–∑ –ø—Ä–∏–∫–∞–∑–∞
    logger.info("–°—Ü–µ–Ω–∞—Ä–∏–π 3: –î–æ–∫—É–º–µ–Ω—Ç –±–µ–∑ –ø—Ä–∏–∫–∞–∑–∞")
    logger.info("  - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –ø—Ä–∏–∫–∞–∑–∞")
    logger.info("  - –ü—Ä–æ–ø—É—Å–∫ –∏–∑–æ–ª—è—Ü–∏–∏ –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")
    logger.info("  - –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç")
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 4: –°–º–µ—à–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    logger.info("–°—Ü–µ–Ω–∞—Ä–∏–π 4: –°–º–µ—à–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç")
    logger.info("  - –≠–≤—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–∑–æ–ª—è—Ü–∏—è")
    logger.info("  - –ü–æ–∏—Å–∫ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã—Ö –Ω–∞—á–∞–ª")
    logger.info("  - –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è fallback")

def test_adaptive_parameters():
    """–¢–µ—Å—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"""
    
    logger.info("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤...")
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    scenarios = [
        ("sp", "–°–ü", "5 —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ–∏—Å–∫–∞", "200 —Å—Ç—Ä–æ–∫ –æ–∫–Ω–∞"),
        ("gost", "–ì–û–°–¢", "3 —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–∏—Å–∫–∞", "100 —Å—Ç—Ä–æ–∫ –æ–∫–Ω–∞"),
        ("other", "–î—Ä—É–≥–∏–µ", "2 —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–∏—Å–∫–∞", "50 —Å—Ç—Ä–æ–∫ –æ–∫–Ω–∞")
    ]
    
    for doc_type, name, pages, window in scenarios:
        logger.info(f"  {name}: {pages}, {window}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    logger.info("üöÄ ENTERPRISE RAG 3.0: Adaptive Order Handling Test")
    
    # –¢–µ—Å—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
    adaptive_success = test_adaptive_order_scenarios()
    
    # –¢–µ—Å—Ç —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
    test_order_scenarios()
    
    # –¢–µ—Å—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    test_adaptive_parameters()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if adaptive_success:
        logger.info("üéâ –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–∫–∞–∑–æ–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞!")
        logger.info("üí° –¢–µ–ø–µ—Ä—å –≤–∞—à RAG –ø–∞–π–ø–ª–∞–π–Ω —É–º–µ–µ—Ç:")
        logger.info("   - –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫ –¥–ª–∏–Ω–µ –ø—Ä–∏–∫–∞–∑–∞ (1-5+ —Å—Ç—Ä–∞–Ω–∏—Ü)")
        logger.info("   - –û–ø—Ä–µ–¥–µ–ª—è—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –±–µ–∑ –ø—Ä–∏–∫–∞–∑–∞")
        logger.info("   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å fallback –∏–∑–æ–ª—è—Ü–∏—é")
        logger.info("   - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
        logger.info("   - –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ª—é–±—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Å –ø—Ä–∏–∫–∞–∑–∞–º–∏")
    else:
        logger.info("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")

if __name__ == "__main__":
    main()
