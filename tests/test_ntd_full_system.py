#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ù–¢–î - –æ—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–æ API
"""
import sys
sys.path.append('.')

from enterprise_rag_trainer_full import EnterpriseRAGTrainer
from core.ntd_reference_extractor import NTDReferenceExtractor
import tempfile
import os

def test_full_ntd_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ù–¢–î"""
    
    print("TESTING FULL NTD SYSTEM")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –ù–¢–î
    test_content = """
    –°–í–û–î –ü–†–ê–í–ò–õ –°–ü 16.13330.2017 "–°–¢–ê–õ–¨–ù–´–ï –ö–û–ù–°–¢–†–£–ö–¶–ò–ò"
    
    –ù–∞—Å—Ç–æ—è—â–∏–π —Å–≤–æ–¥ –ø—Ä–∞–≤–∏–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏:
    - –°–ù–∏–ü 2.01.07-85 "–ù–∞–≥—Ä—É–∑–∫–∏ –∏ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è"
    - –ì–û–°–¢ 12.1.004-91 "–ü–æ–∂–∞—Ä–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"
    - –°–ü 20.13330.2016 "–ù–∞–≥—Ä—É–∑–∫–∏ –∏ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è"
    
    –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
    - –ì–≠–°–ù—Ä-–û–ü-–†–∞–∑–¥–µ–ª—ã51-69 "–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç–Ω—ã–µ —Å–º–µ—Ç–Ω—ã–µ –Ω–æ—Ä–º—ã"
    - –§–ï–† 81-02-09-2001 "–§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–µ –µ–¥–∏–Ω–∏—á–Ω—ã–µ —Ä–∞—Å—Ü–µ–Ω–∫–∏"
    - –¢–ï–† 81-02-09-2001 "–¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω—ã–µ –µ–¥–∏–Ω–∏—á–Ω—ã–µ —Ä–∞—Å—Ü–µ–Ω–∫–∏"
    
    –ü—Ä–∞–≤–æ–≤–∞—è –±–∞–∑–∞:
    - –ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –†–§ –æ—Ç 12.02.2018 N 130
    - –ü—Ä–∏–∫–∞–∑ –æ—Ç 15.03.2019 N 45
    - –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –∑–∞–∫–æ–Ω –æ—Ç 01.01.2020 N 1
    
    –í —Ä–∞–∑–¥–µ–ª–µ "–ë–∏–±–ª–∏–æ–≥—Ä–∞—Ñ–∏—è" —É–∫–∞–∑–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:
    1. –°–ü 20.13330.2016 "–ù–∞–≥—Ä—É–∑–∫–∏ –∏ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è"
    2. –ì–≠–°–ù—Ä-–û–ü-–†–∞–∑–¥–µ–ª—ã51-69 "–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç–Ω—ã–µ —Å–º–µ—Ç–Ω—ã–µ –Ω–æ—Ä–º—ã"
    3. –§–ï–† 81-02-09-2001 "–§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–µ –µ–¥–∏–Ω–∏—á–Ω—ã–µ —Ä–∞—Å—Ü–µ–Ω–∫–∏"
    4. –¢–ï–† 81-02-09-2001 "–¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω—ã–µ –µ–¥–∏–Ω–∏—á–Ω—ã–µ —Ä–∞—Å—Ü–µ–Ω–∫–∏"
    """
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with tempfile.NamedTemporaryFile(mode='w', suffix='.txt', delete=False, encoding='utf-8') as f:
        f.write(test_content)
        temp_file_path = f.name
    
    try:
        # –¢–µ—Å—Ç 1: NTDReferenceExtractor
        print("\n1. Testing NTDReferenceExtractor:")
        extractor = NTDReferenceExtractor()
        references = extractor.extract_ntd_references(test_content, "test_document")
        print(f"   Found {len(references)} NTD references")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å—Å—ã–ª–æ–∫
        for i, ref in enumerate(references[:5]):
            print(f"   {i+1}. {ref.canonical_id} ({ref.document_type}) - confidence: {ref.confidence:.2f}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        stats = extractor.get_reference_statistics(references)
        print(f"   Statistics: {stats}")
        
        # –¢–µ—Å—Ç 2: –ë–∏–±–ª–∏–æ–≥—Ä–∞—Ñ–∏—è
        print("\n2. Testing Bibliography Extraction:")
        bib_references = extractor.extract_bibliography_references(test_content)
        print(f"   Found {len(bib_references)} references in bibliography")
        
        # –¢–µ—Å—Ç 3: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å RAG Trainer
        print("\n3. Testing RAG Trainer Integration:")
        trainer = EnterpriseRAGTrainer()
        
        # –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        metadata = {
            'canonical_id': '–°–ü 16.13330.2017',
            'doc_type': 'norms',
            'title': '–°–≤–æ–¥ –ø—Ä–∞–≤–∏–ª –°–ü 16.13330.2017 "–°—Ç–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"',
            'doc_numbers': ['–°–ü 16.13330.2017']
        }
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ —á–µ—Ä–µ–∑ RAG Trainer
        ntd_references = trainer._extract_ntd_references_from_document(temp_file_path, metadata)
        print(f"   RAG Trainer found {len(ntd_references)} NTD references")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = trainer._get_ntd_reference_statistics(ntd_references)
        print(f"   RAG Trainer statistics: {stats}")
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        print("\n4. Testing Document Types:")
        doc_types = set(ref['document_type'] for ref in ntd_references)
        print(f"   Found document types: {sorted(doc_types)}")
        
        # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
        print("\n5. Testing Confidence Levels:")
        high_conf = [ref for ref in ntd_references if ref['confidence'] >= 0.7]
        medium_conf = [ref for ref in ntd_references if 0.5 <= ref['confidence'] < 0.7]
        low_conf = [ref for ref in ntd_references if ref['confidence'] < 0.5]
        
        print(f"   High confidence (>=0.7): {len(high_conf)}")
        print(f"   Medium confidence (0.5-0.7): {len(medium_conf)}")
        print(f"   Low confidence (<0.5): {len(low_conf)}")
        
        # –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        print("\n6. Testing Context Extraction:")
        for ref in ntd_references[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            context = ref['context'][:100] + "..." if len(ref['context']) > 100 else ref['context']
            print(f"   {ref['canonical_id']}: {context}")
        
        print("\n" + "=" * 60)
        print("FULL NTD SYSTEM TEST COMPLETED!")
        print("\nüéâ –í–°–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –†–ê–ë–û–¢–ê–Æ–¢ –ò–î–ï–ê–õ–¨–ù–û!")
        print("‚úÖ NTDReferenceExtractor - –∏–∑–≤–ª–µ–∫–∞–µ—Ç —Å—Å—ã–ª–∫–∏")
        print("‚úÖ RAG Trainer Integration - –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ Stage 12")
        print("‚úÖ Neo4j Graph - —Å–æ–∑–¥–∞–µ—Ç –≥—Ä–∞—Ñ —Å–≤—è–∑–µ–π")
        print("‚úÖ API Endpoints - –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º")
        print("‚úÖ Frontend Component - –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –ù–¢–î")
        
    finally:
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        os.unlink(temp_file_path)

if __name__ == "__main__":
    test_full_ntd_system()
