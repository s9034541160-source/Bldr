#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞
"""

import sys
import os
sys.path.append(os.path.dirname(__file__))

def test_coordinator_execution():
    """–¢–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–º"""
    try:
        from core.model_manager import ModelManager
        from core.unified_tools_system import UnifiedToolsSystem
        from core.coordinator import Coordinator
        
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º...")
        model_manager = ModelManager()
        tools_system = UnifiedToolsSystem()
        coordinator = Coordinator(model_manager, tools_system, None)
        
        print("üìù –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å")
        response1 = coordinator.process_request("–°–ü –ø–æ –∑–µ–º–ª—è–Ω—ã–º —Ä–∞–±–æ—Ç–∞–º")
        print(f"–û—Ç–≤–µ—Ç: {response1}")
        
        print("\nüìù –¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏")
        response2 = coordinator.process_request("—Å–¥–µ–ª–∞–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π —á–µ–∫-–ª–∏—Å—Ç –º–∞—Å—Ç–µ—Ä–∞ –°–ú–† –≤ –≤–æ—Ä–¥")
        print(f"–û—Ç–≤–µ—Ç: {response2}")
        
        print("\nüìù –¢–µ—Å—Ç 3: –ê–Ω–∞–ª–∏–∑ —Å–º–µ—Ç—ã")
        response3 = coordinator.process_request("–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–º–µ—Ç—É, —Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ –Ω–µ–π")
        print(f"–û—Ç–≤–µ—Ç: {response3}")
        
        print("\n‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_coordinator_agent():
    """–¢–µ—Å—Ç CoordinatorAgent"""
    try:
        from core.model_manager import ModelManager
        from core.unified_tools_system import UnifiedToolsSystem
        from core.agents.coordinator_agent import CoordinatorAgent
        
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CoordinatorAgent...")
        model_manager = ModelManager()
        tools_system = UnifiedToolsSystem()
        agent = CoordinatorAgent(tools_system=tools_system, enable_meta_tools=False)
        
        print("üìù –¢–µ—Å—Ç CoordinatorAgent: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å")
        response = agent.process_request("–°–ü –ø–æ –∑–µ–º–ª—è–Ω—ã–º —Ä–∞–±–æ—Ç–∞–º")
        print(f"–û—Ç–≤–µ—Ç: {response}")
        
        print("\n‚úÖ –¢–µ—Å—Ç CoordinatorAgent –∑–∞–≤–µ—Ä—à–µ–Ω")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ CoordinatorAgent: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞")
    print("=" * 50)
    
    success1 = test_coordinator_execution()
    print("\n" + "=" * 50)
    success2 = test_coordinator_agent()
    
    print("\n" + "=" * 50)
    if success1 and success2:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
