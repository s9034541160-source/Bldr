#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –µ–¥–∏–Ω–æ–≥–æ –ø—É—Ç–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
"""

import sys
import os
sys.path.append(os.path.dirname(__file__))

def test_unified_processing():
    """–¢–µ—Å—Ç –µ–¥–∏–Ω–æ–≥–æ –ø—É—Ç–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
    try:
        from core.model_manager import ModelManager
        from core.unified_tools_system import UnifiedToolsSystem
        from core.coordinator import Coordinator
        
        print("üîß –¢–µ—Å—Ç –µ–¥–∏–Ω–æ–≥–æ –ø—É—Ç–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏...")
        model_manager = ModelManager()
        tools_system = UnifiedToolsSystem(rag_system=None, model_manager=model_manager)
        coordinator = Coordinator(model_manager, tools_system, None)
        
        print(f"–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω: {coordinator is not None}")
        
        # –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        print("\nüìù –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: '–°–ü –ø–æ –∑–µ–º–ª—è–Ω—ã–º —Ä–∞–±–æ—Ç–∞–º'")
        response1 = coordinator.process_request("–°–ü –ø–æ –∑–µ–º–ª—è–Ω—ã–º —Ä–∞–±–æ—Ç–∞–º")
        print(f"–û—Ç–≤–µ—Ç: {response1[:100]}...")
        
        # –¢–µ—Å—Ç —Å–ª–æ–∂–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        print("\nüìù –¢–µ—Å—Ç —Å–ª–æ–∂–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: '—Å–¥–µ–ª–∞–π —á–µ–∫-–ª–∏—Å—Ç –º–∞—Å—Ç–µ—Ä–∞'")
        response2 = coordinator.process_request("—Å–¥–µ–ª–∞–π —á–µ–∫-–ª–∏—Å—Ç –º–∞—Å—Ç–µ—Ä–∞")
        print(f"–û—Ç–≤–µ—Ç: {response2[:100]}...")
        
        # –¢–µ—Å—Ç –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        print("\nüìù –¢–µ—Å—Ç –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: '—á—Ç–æ-—Ç–æ –ø–æ –∑–µ–º–ª–µ'")
        response3 = coordinator.process_request("—á—Ç–æ-—Ç–æ –ø–æ –∑–µ–º–ª–µ")
        print(f"–û—Ç–≤–µ—Ç: {response3[:100]}...")
        
        print("‚úÖ –¢–µ—Å—Ç –µ–¥–∏–Ω–æ–≥–æ –ø—É—Ç–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_coordinator_agent():
    """–¢–µ—Å—Ç CoordinatorAgent"""
    try:
        from core.model_manager import ModelManager
        from core.unified_tools_system import UnifiedToolsSystem
        from core.agents.coordinator_agent import CoordinatorAgent
        
        print("üîß –¢–µ—Å—Ç CoordinatorAgent...")
        model_manager = ModelManager()
        tools_system = UnifiedToolsSystem(rag_system=None, model_manager=model_manager)
        agent = CoordinatorAgent(tools_system=tools_system, enable_meta_tools=False)
        
        print(f"Agent —Å–æ–∑–¥–∞–Ω: {agent is not None}")
        
        # –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        print("\nüìù –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: '–ì–û–°–¢ –ø–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–º'")
        response1 = agent.process_request("–ì–û–°–¢ –ø–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–º")
        print(f"–û—Ç–≤–µ—Ç: {response1[:100]}...")
        
        # –¢–µ—Å—Ç —Å–ª–æ–∂–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        print("\nüìù –¢–µ—Å—Ç —Å–ª–æ–∂–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: '–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–º–µ—Ç—É'")
        response2 = agent.process_request("–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–º–µ—Ç—É")
        print(f"–û—Ç–≤–µ—Ç: {response2[:100]}...")
        
        print("‚úÖ –¢–µ—Å—Ç CoordinatorAgent –∑–∞–≤–µ—Ä—à–µ–Ω")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –µ–¥–∏–Ω–æ–≥–æ –ø—É—Ç–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    print("=" * 60)
    
    success1 = test_unified_processing()
    print("\n" + "=" * 60)
    success2 = test_coordinator_agent()
    
    print("\n" + "=" * 60)
    if success1 and success2:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("üéâ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –µ–¥–∏–Ω–∞—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞!")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
