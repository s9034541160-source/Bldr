#!/usr/bin/env python3
"""
–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ RAG –æ–±—É—á–µ–Ω–∏—è –Ω–∞ 1168 —Ñ–∞–π–ª–∞—Ö –ù–¢–î
"""

import requests
import time
from datetime import datetime
import os
from dotenv import load_dotenv

load_dotenv()

API_BASE = "http://localhost:8000"
API_TOKEN = os.getenv("API_TOKEN")

def get_auth_headers():
    if API_TOKEN:
        return {"Authorization": f"Bearer {API_TOKEN}"}
    return {}

def test_search_progress():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
    print(f"üîç [{datetime.now().strftime('%H:%M:%S')}] –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫...")
    
    auth_headers = get_auth_headers()
    if not auth_headers:
        print("‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        return
    
    queries = [
        "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–æ—Ä–º—ã –∏ –ø—Ä–∞–≤–∏–ª–∞",
        "–∂–µ–ª–µ–∑–æ–±–µ—Ç–æ–Ω–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏", 
        "–°–ü –ì–û–°–¢ –°–ù–∏–ü",
        "—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è",
        "–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–¥–∞–Ω–∏–π"
    ]
    
    total_results = 0
    
    for query in queries:
        try:
            response = requests.post(
                f"{API_BASE}/query",
                json={"query": query, "k": 5},
                headers=auth_headers,
                timeout=10
            )
            
            if response.status_code == 200:
                results = response.json()
                count = len(results.get('results', []))
                total_results += count
                if count > 0:
                    print(f"  ‚úÖ '{query}': {count} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
                else:
                    print(f"  ‚ö™ '{query}': –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
            else:
                print(f"  ‚ùå '{query}': –æ—à–∏–±–∫–∞ {response.status_code}")
                
        except Exception as e:
            print(f"  ‚ö†Ô∏è '{query}': {e}")
    
    print(f"üìä –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {total_results}")
    return total_results

def monitor_system_resources():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–º —Ä–µ—Å—É—Ä—Å—ã —Å–∏—Å—Ç–µ–º—ã"""
    try:
        import psutil
        
        # CPU
        cpu_percent = psutil.cpu_percent(interval=1)
        
        # Memory
        memory = psutil.virtual_memory()
        memory_percent = memory.percent
        memory_used_gb = memory.used / (1024**3)
        memory_total_gb = memory.total / (1024**3)
        
        # Disk I/O
        disk_io = psutil.disk_io_counters()
        
        print(f"üíª –°–∏—Å—Ç–µ–º–∞:")
        print(f"   CPU: {cpu_percent:.1f}%")
        print(f"   RAM: {memory_percent:.1f}% ({memory_used_gb:.1f}GB / {memory_total_gb:.1f}GB)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã Python
        python_processes = []
        for proc in psutil.process_iter(['pid', 'name', 'cpu_percent', 'memory_percent']):
            try:
                if 'python' in proc.info['name'].lower():
                    python_processes.append(proc.info)
            except:
                pass
        
        if python_processes:
            print(f"üêç Python –ø—Ä–æ—Ü–µ—Å—Å—ã: {len(python_processes)}")
            for proc in python_processes[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"   PID {proc['pid']}: CPU {proc['cpu_percent']:.1f}%, RAM {proc['memory_percent']:.1f}%")
                
    except ImportError:
        print("‚ö†Ô∏è psutil –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ—Å—É—Ä—Å–æ–≤: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    print("üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ RAG –æ–±—É—á–µ–Ω–∏—è –Ω–∞ 1168 —Ñ–∞–π–ª–∞—Ö")
    print("=" * 60)
    print("üìù –ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫")
    print("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print()
    
    start_time = datetime.now()
    iteration = 0
    
    try:
        while True:
            iteration += 1
            current_time = datetime.now()
            elapsed = current_time - start_time
            
            print(f"üîÑ –ò—Ç–µ—Ä–∞—Ü–∏—è {iteration} | –í—Ä–µ–º—è: {elapsed}")
            print("-" * 40)
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
            results_count = test_search_progress()
            
            # –ú–æ–Ω–∏—Ç–æ—Ä–∏–º —Ä–µ—Å—É—Ä—Å—ã
            monitor_system_resources()
            
            print()
            
            if results_count > 10:  # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                print("üéâ –ü–æ—Ö–æ–∂–µ, –æ–±—É—á–µ–Ω–∏–µ –¥–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã!")
                print("üí° –ú–æ–∂–µ—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã")
            
            # –ñ–¥—ë–º 5 –º–∏–Ω—É—Ç
            print("‚è≥ –ñ–¥—ë–º 5 –º–∏–Ω—É—Ç –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...")
            time.sleep(300)  # 5 –º–∏–Ω—É—Ç
            
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        elapsed = datetime.now() - start_time
        print(f"üïê –í—Ä–µ–º—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {elapsed}")

if __name__ == "__main__":
    main()