#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ RAG –æ–±—É—á–µ–Ω–∏—è
"""

import requests
import os
import time
from datetime import datetime
from dotenv import load_dotenv

load_dotenv()

API_BASE = "http://localhost:8000"
API_TOKEN = os.getenv("API_TOKEN")

def check_api_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API"""
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ RAG —Å–∏—Å—Ç–µ–º—ã - {datetime.now().strftime('%H:%M:%S')}")
    print("=" * 50)
    
    if not API_TOKEN:
        print("‚ùå –ù–µ—Ç API —Ç–æ–∫–µ–Ω–∞")
        return False
    
    headers = {"Authorization": f"Bearer {API_TOKEN}"}
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ API
    try:
        response = requests.get(f"{API_BASE}/health", timeout=10)
        if response.status_code == 200:
            print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ API: {e}")
        return False
    
    # 2. –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫
    print("\nüîç –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫...")
    search_queries = [
        "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–æ—Ä–º—ã",
        "–ì–û–°–¢", 
        "–°–ü",
        "–∂–µ–ª–µ–∑–æ–±–µ—Ç–æ–Ω"
    ]
    
    total_results = 0
    for query in search_queries:
        try:
            response = requests.post(
                f"{API_BASE}/query",
                json={"query": query, "k": 3},
                headers=headers,
                timeout=15
            )
            
            if response.status_code == 200:
                data = response.json()
                results = data.get('results', [])
                count = len(results)
                total_results += count
                
                if count > 0:
                    print(f"   ‚úÖ '{query}': {count} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    first = results[0]
                    chunk = first.get('chunk', '')[:100]
                    score = first.get('score', 0)
                    print(f"      üìÑ [{score:.3f}] {chunk}...")
                else:
                    print(f"   ‚ö™ '{query}': –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
            else:
                print(f"   ‚ùå '{query}': –æ—à–∏–±–∫–∞ {response.status_code}")
                
        except Exception as e:
            print(f"   ‚ö†Ô∏è '{query}': {e}")
    
    print(f"\nüìä –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {total_results}")
    
    if total_results == 0:
        print("‚ÑπÔ∏è  –û–±—É—á–µ–Ω–∏–µ –µ—â—ë –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ")
    elif total_results < 5:
        print("‚ö° –ü–µ—Ä–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—è–≤–ª—è—é—Ç—Å—è! –û–±—É—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("üéâ –°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    
    return True

def check_file_activity():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –ø–∞–ø–∫–∞—Ö"""
    print("\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...")
    
    paths_to_check = [
        ("I:/docs/downloaded", "–ò—Å—Ö–æ–¥–Ω—ã–µ –ù–¢–î"),
        ("I:/docs/clean_base", "–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"),
        ("I:/docs/reports", "–û—Ç—á—ë—Ç—ã —Å–∏—Å—Ç–µ–º—ã"),
        ("C:/Bldr/data", "–î–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã")
    ]
    
    for path, description in paths_to_check:
        try:
            if os.path.exists(path):
                files = len([f for f in os.listdir(path) if os.path.isfile(os.path.join(path, f))])
                print(f"   üìÇ {description}: {files} —Ñ–∞–π–ª–æ–≤")
            else:
                print(f"   ‚ùå {description}: –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        except Exception as e:
            print(f"   ‚ö†Ô∏è {description}: –æ—à–∏–±–∫–∞ {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"""
    success = check_api_status()
    if success:
        check_file_activity()
        
        print(f"\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("   - –ó–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç—É –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–∂–¥—ã–µ 10-15 –º–∏–Ω—É—Ç")
        print("   - –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø–æ—è–≤–ª–µ–Ω–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞")  
        print("   - –û–±—É—á–µ–Ω–∏–µ 1168 —Ñ–∞–π–ª–æ–≤ –∑–∞–π–º—ë—Ç 2-4 —á–∞—Å–∞")
    
    print(f"\nüïê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {datetime.now().strftime('%H:%M:%S')}")

if __name__ == "__main__":
    main()