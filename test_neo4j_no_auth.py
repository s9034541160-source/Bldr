#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Neo4j –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
"""

import os
from dotenv import load_dotenv
from neo4j import GraphDatabase

load_dotenv()

NEO4J_URI = os.getenv("NEO4J_URI", "neo4j://localhost:7687")

def test_no_auth():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    print("üîì –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Neo4j –±–µ–∑ –ø–∞—Ä–æ–ª—è")
    print("=" * 40)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–µ–∑ auth –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
        driver = GraphDatabase.driver(NEO4J_URI)
        with driver.session() as session:
            result = session.run("RETURN 'Connected without password!' as message")
            record = result.single()
            print(f"‚úÖ –£—Å–ø–µ—Ö: {record['message']}")
            driver.close()
            return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_with_new_password():
    """–¢–µ—Å—Ç —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º neopassword"""
    print("\nüîê –¢–µ—Å—Ç —Å –ø–∞—Ä–æ–ª–µ–º 'neopassword'")
    print("=" * 40)
    
    try:
        driver = GraphDatabase.driver(NEO4J_URI, auth=("neo4j", "neopassword"))
        with driver.session() as session:
            result = session.run("RETURN 'Connected with neopassword!' as message")
            record = result.single()
            print(f"‚úÖ –£—Å–ø–µ—Ö: {record['message']}")
            driver.close()
            return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Neo4j –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏")
    print()
    
    # –°–Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç –±–µ–∑ –ø–∞—Ä–æ–ª—è
    if test_no_auth():
        print("üéâ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–µ–∑ –ø–∞—Ä–æ–ª—è —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å 'neopassword' –≤ Neo4j Desktop")
    
    # –ü–æ—Ç–æ–º —Ç–µ—Å—Ç —Å –ø–∞—Ä–æ–ª–µ–º (–µ—Å–ª–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
    if test_with_new_password():
        print("üéâ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print("‚úÖ Neo4j –≥–æ—Ç–æ–≤ –¥–ª—è RAG –æ–±—É—á–µ–Ω–∏—è!")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª
        update_env_password("neopassword")
    
def update_env_password(password):
    """–û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –≤ .env —Ñ–∞–π–ª–µ"""
    try:
        with open(".env", 'r') as f:
            lines = f.readlines()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Å –ø–∞—Ä–æ–ª–µ–º
        updated = False
        for i, line in enumerate(lines):
            if line.startswith("NEO4J_PASSWORD="):
                lines[i] = f"NEO4J_PASSWORD={password}\r\n"
                updated = True
                break
        
        if not updated:
            lines.append(f"NEO4J_PASSWORD={password}\r\n")
        
        with open(".env", 'w') as f:
            f.writelines(lines)
        
        print(f"‚úÖ –ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω –≤ .env: {password}")
        
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .env: {e}")

if __name__ == "__main__":
    main()