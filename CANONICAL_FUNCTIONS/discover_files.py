# –ö–ê–ù–û–ù–ò–ß–ï–°–ö–ê–Ø –í–ï–†–°–ò–Ø —Ñ—É–Ω–∫—Ü–∏–∏: discover_files
# –û—Å–Ω–æ–≤–Ω–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫: C:\Bldr\background_rag_training.py
# –î—É–±–ª–∏–∫–∞—Ç—ã (–¥–ª—è —Å–ø—Ä–∞–≤–∫–∏):
#   - C:\Bldr\interactive_rag_training.py
#================================================================================
    def discover_files(self) -> List[Path]:
        """–ü–æ–∏—Å–∫ –≤—Å–µ—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
        
        logger.info("üîç Discovering files for training...")
        
        extensions = ['*.pdf', '*.docx', '*.doc', '*.txt', '*.rtf']
        all_files = []
        
        for ext in extensions:
            try:
                files = list(self.base_dir.rglob(ext))
                all_files.extend(files)
                logger.info(f"  üìÑ Found {len(files)} {ext} files")
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è Error searching for {ext}: {e}")
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã
        unique_files = []
        seen_names = set()
        
        for file_path in all_files:
            if file_path.name.lower() not in seen_names and file_path.exists():
                unique_files.append(file_path)
                seen_names.add(file_path.name.lower())
        
        logger.info(f"üìä Total unique files discovered: {len(unique_files)}")
        self.stats['files_found'] = len(unique_files)
        
        return unique_files