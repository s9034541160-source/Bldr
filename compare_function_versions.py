import ast
import difflib
from pathlib import Path

def extract_function_code(file_path, func_name):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞."""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            source = f.read()
        tree = ast.parse(source)
        for node in ast.walk(tree):
            if isinstance(node, ast.FunctionDef) and node.name == func_name:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –∫–æ–¥–∞ —Ñ—É–Ω–∫—Ü–∏–∏
                lines = source.splitlines()
                start_line = node.lineno - 1
                # Try to get end line number, fallback if not available
                end_line = getattr(node, 'end_lineno', node.lineno + 20)
                func_code = "\n".join(lines[start_line:end_line])
                return func_code
    except Exception as e:
        return f"# ERROR extracting function: {e}"
    return f"# Function '{func_name}' not found in {file_path}"

def compare_versions(primary_file, duplicate_files, func_name):
    print(f"\n" + "="*80)
    print(f"üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π —Ñ—É–Ω–∫—Ü–∏–∏: {func_name}")
    print(f"‚úÖ –û—Å–Ω–æ–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è: {primary_file}")
    print("="*80)

    primary_code = extract_function_code(primary_file, func_name)

    for dup_file in duplicate_files:
        if dup_file == primary_file:
            continue
        dup_code = extract_function_code(dup_file, func_name)
        print(f"\n--- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å: {dup_file} ---")
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        differ = difflib.Differ()
        diff = list(differ.compare(primary_code.splitlines(), dup_code.splitlines()))
        # –í—ã–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ —Ä–∞–∑–ª–∏—á–∏—è
        has_diff = False
        for line in diff:
            if line.startswith('+ ') or line.startswith('- ') or line.startswith('? '):
                has_diff = True
                print(line)

        if not has_diff:
            print("  –ù–µ—Ç —Ä–∞–∑–ª–∏—á–∏–π.")
        else:
            print("  (–°—Ç—Ä–æ–∫–∏, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å '+' ‚Äî –µ—Å—Ç—å –≤ –¥—É–±–ª–µ, –Ω–æ –Ω–µ—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–º. '-' ‚Äî –Ω–∞–æ–±–æ—Ä–æ—Ç)")

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–≤—Å—Ç–∞–≤—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ CSV)
if __name__ == "__main__":
    # –ü—Ä–∏–º–µ—Ä –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ 'main'
    func_to_compare = "main"
    primary_version = r"C:\Bldr\bldr_gui.py"  # –ò–∑ —Å—Ç–æ–ª–±—Ü–∞ ChosenPrimaryFile
    duplicates = [
        r"C:\Bldr\bldr_gui_manager.py",
        r"C:\Bldr\core\test_main.py",
        # ... –¥–æ–±–∞–≤—å –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∏–∑ FileList
    ]

    compare_versions(primary_version, duplicates, func_to_compare)

    # –ü–æ–≤—Ç–æ—Ä–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π...